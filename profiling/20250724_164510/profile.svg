<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1274" onload="init(evt)" viewBox="0 0 1200 1274" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1274" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">C:\Users\ricar\AppData\Local\Programs\Python\Python310\Scripts\py-spy.exe record -o profile.svg -- python src/ecg_reference_demo.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1263.00"> </text><svg id="frames" x="10" width="1180" total_samples="579966"><g><title>_collision_check (purkinje_uv\fractal_tree_uv.py:250) (6,663 samples, 1.15%)</title><rect x="0.3990%" y="196" width="1.1489%" height="15" fill="rgb(227,0,7)" fg:x="2314" fg:w="6663"/><text x="0.6490%" y="206.50"></text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:454) (6,967 samples, 1.20%)</title><rect x="0.3969%" y="180" width="1.2013%" height="15" fill="rgb(217,0,24)" fg:x="2302" fg:w="6967"/><text x="0.6469%" y="190.50"></text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:520) (8,603 samples, 1.48%)</title><rect x="0.2748%" y="164" width="1.4834%" height="15" fill="rgb(221,193,54)" fg:x="1594" fg:w="8603"/><text x="0.5248%" y="174.50"></text></g><g><title>project_new_point (purkinje_uv\mesh.py:196) (896 samples, 0.15%)</title><rect x="1.8001%" y="196" width="0.1545%" height="15" fill="rgb(248,212,6)" fg:x="10440" fg:w="896"/><text x="2.0501%" y="206.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:264) (2,980 samples, 0.51%)</title><rect x="2.2803%" y="212" width="0.5138%" height="15" fill="rgb(208,68,35)" fg:x="13225" fg:w="2980"/><text x="2.5303%" y="222.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:265) (2,692 samples, 0.46%)</title><rect x="2.7941%" y="212" width="0.4642%" height="15" fill="rgb(232,128,0)" fg:x="16205" fg:w="2692"/><text x="3.0441%" y="222.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:266) (2,670 samples, 0.46%)</title><rect x="3.2583%" y="212" width="0.4604%" height="15" fill="rgb(207,160,47)" fg:x="18897" fg:w="2670"/><text x="3.5083%" y="222.50"></text></g><g><title>project_new_point (purkinje_uv\mesh.py:199) (11,205 samples, 1.93%)</title><rect x="1.9560%" y="196" width="1.9320%" height="15" fill="rgb(228,23,34)" fg:x="11344" fg:w="11205"/><text x="2.2060%" y="206.50">p..</text></g><g><title>_eval_field (purkinje_uv\fractal_tree_uv.py:117) (12,159 samples, 2.10%)</title><rect x="1.7936%" y="180" width="2.0965%" height="15" fill="rgb(218,30,26)" fg:x="10402" fg:w="12159"/><text x="2.0436%" y="190.50">_..</text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:546) (12,428 samples, 2.14%)</title><rect x="1.7906%" y="164" width="2.1429%" height="15" fill="rgb(220,122,19)" fg:x="10385" fg:w="12428"/><text x="2.0406%" y="174.50">g..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:374) (21,311 samples, 3.67%)</title><rect x="0.2597%" y="148" width="3.6745%" height="15" fill="rgb(250,228,42)" fg:x="1506" fg:w="21311"/><text x="0.5097%" y="158.50">run_..</text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:453) (778 samples, 0.13%)</title><rect x="4.0704%" y="180" width="0.1341%" height="15" fill="rgb(240,193,28)" fg:x="23607" fg:w="778"/><text x="4.3204%" y="190.50"></text></g><g><title>_collision_check (purkinje_uv\fractal_tree_uv.py:250) (24,503 samples, 4.22%)</title><rect x="4.2125%" y="196" width="4.2249%" height="15" fill="rgb(216,20,37)" fg:x="24431" fg:w="24503"/><text x="4.4625%" y="206.50">_coll..</text></g><g><title>norm (numpy\linalg\_linalg.py:2836) (1,508 samples, 0.26%)</title><rect x="8.1774%" y="212" width="0.2600%" height="15" fill="rgb(206,188,39)" fg:x="47426" fg:w="1508"/><text x="8.4274%" y="222.50"></text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:454) (25,191 samples, 4.34%)</title><rect x="4.2046%" y="180" width="4.3435%" height="15" fill="rgb(217,207,13)" fg:x="24385" fg:w="25191"/><text x="4.4546%" y="190.50">_grow..</text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:464) (785 samples, 0.14%)</title><rect x="8.6924%" y="180" width="0.1354%" height="15" fill="rgb(231,73,38)" fg:x="50413" fg:w="785"/><text x="8.9424%" y="190.50"></text></g><g><title>_can_grow_to (purkinje_uv\fractal_tree_uv.py:222) (776 samples, 0.13%)</title><rect x="8.6940%" y="196" width="0.1338%" height="15" fill="rgb(225,20,46)" fg:x="50422" fg:w="776"/><text x="8.9440%" y="206.50"></text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:520) (28,698 samples, 4.95%)</title><rect x="3.9563%" y="164" width="4.9482%" height="15" fill="rgb(210,31,41)" fg:x="22945" fg:w="28698"/><text x="4.2063%" y="174.50">grow_t..</text></g><g><title>project_new_point (purkinje_uv\mesh.py:196) (1,867 samples, 0.32%)</title><rect x="8.9945%" y="196" width="0.3219%" height="15" fill="rgb(221,200,47)" fg:x="52165" fg:w="1867"/><text x="9.2445%" y="206.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (965 samples, 0.17%)</title><rect x="10.0285%" y="228" width="0.1664%" height="15" fill="rgb(226,26,5)" fg:x="58162" fg:w="965"/><text x="10.2785%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (781 samples, 0.13%)</title><rect x="10.1949%" y="228" width="0.1347%" height="15" fill="rgb(249,33,26)" fg:x="59127" fg:w="781"/><text x="10.4449%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:264) (6,002 samples, 1.03%)</title><rect x="9.9746%" y="212" width="1.0349%" height="15" fill="rgb(235,183,28)" fg:x="57849" fg:w="6002"/><text x="10.2246%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (873 samples, 0.15%)</title><rect x="10.8589%" y="228" width="0.1505%" height="15" fill="rgb(221,5,38)" fg:x="62978" fg:w="873"/><text x="11.1089%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (743 samples, 0.13%)</title><rect x="11.0527%" y="228" width="0.1281%" height="15" fill="rgb(247,18,42)" fg:x="64102" fg:w="743"/><text x="11.3027%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (707 samples, 0.12%)</title><rect x="11.1808%" y="228" width="0.1219%" height="15" fill="rgb(241,131,45)" fg:x="64845" fg:w="707"/><text x="11.4308%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:265) (5,215 samples, 0.90%)</title><rect x="11.0094%" y="212" width="0.8992%" height="15" fill="rgb(249,31,29)" fg:x="63851" fg:w="5215"/><text x="11.2594%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (779 samples, 0.13%)</title><rect x="11.7743%" y="228" width="0.1343%" height="15" fill="rgb(225,111,53)" fg:x="68287" fg:w="779"/><text x="12.0243%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (640 samples, 0.11%)</title><rect x="11.9516%" y="228" width="0.1104%" height="15" fill="rgb(238,160,17)" fg:x="69315" fg:w="640"/><text x="12.2016%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (674 samples, 0.12%)</title><rect x="12.0619%" y="228" width="0.1162%" height="15" fill="rgb(214,148,48)" fg:x="69955" fg:w="674"/><text x="12.3119%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:266) (5,068 samples, 0.87%)</title><rect x="11.9086%" y="212" width="0.8738%" height="15" fill="rgb(232,36,49)" fg:x="69066" fg:w="5068"/><text x="12.1586%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (780 samples, 0.13%)</title><rect x="12.6480%" y="228" width="0.1345%" height="15" fill="rgb(209,103,24)" fg:x="73354" fg:w="780"/><text x="12.8980%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:272) (649 samples, 0.11%)</title><rect x="12.8994%" y="212" width="0.1119%" height="15" fill="rgb(229,88,8)" fg:x="74812" fg:w="649"/><text x="13.1494%" y="222.50"></text></g><g><title>project_new_point (purkinje_uv\mesh.py:199) (21,953 samples, 3.79%)</title><rect x="9.3186%" y="196" width="3.7852%" height="15" fill="rgb(213,181,19)" fg:x="54045" fg:w="21953"/><text x="9.5686%" y="206.50">proj..</text></g><g><title>_eval_field (purkinje_uv\fractal_tree_uv.py:117) (23,927 samples, 4.13%)</title><rect x="8.9826%" y="180" width="4.1256%" height="15" fill="rgb(254,191,54)" fg:x="52096" fg:w="23927"/><text x="9.2326%" y="190.50">_eva..</text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:546) (24,482 samples, 4.22%)</title><rect x="8.9781%" y="164" width="4.2213%" height="15" fill="rgb(241,83,37)" fg:x="52070" fg:w="24482"/><text x="9.2281%" y="174.50">grow_..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:381) (53,710 samples, 9.26%)</title><rect x="3.9407%" y="148" width="9.2609%" height="15" fill="rgb(233,36,39)" fg:x="22855" fg:w="53710"/><text x="4.1907%" y="158.50">run_ECG (src\..</text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (674 samples, 0.12%)</title><rect x="13.6087%" y="276" width="0.1162%" height="15" fill="rgb(226,3,54)" fg:x="78926" fg:w="674"/><text x="13.8587%" y="286.50"></text></g><g><title>compute_neighborhood_map (fimpy\fim_base.py:142) (2,035 samples, 0.35%)</title><rect x="13.3804%" y="260" width="0.3509%" height="15" fill="rgb(245,192,40)" fg:x="77602" fg:w="2035"/><text x="13.6304%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:69) (2,117 samples, 0.37%)</title><rect x="13.3792%" y="244" width="0.3650%" height="15" fill="rgb(238,167,29)" fg:x="77595" fg:w="2117"/><text x="13.6292%" y="254.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:56) (2,814 samples, 0.49%)</title><rect x="13.2654%" y="180" width="0.4852%" height="15" fill="rgb(232,182,51)" fg:x="76935" fg:w="2814"/><text x="13.5154%" y="190.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:69) (2,811 samples, 0.48%)</title><rect x="13.2660%" y="196" width="0.4847%" height="15" fill="rgb(231,60,39)" fg:x="76938" fg:w="2811"/><text x="13.5160%" y="206.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:58) (2,811 samples, 0.48%)</title><rect x="13.2660%" y="212" width="0.4847%" height="15" fill="rgb(208,69,12)" fg:x="76938" fg:w="2811"/><text x="13.5160%" y="222.50"></text></g><g><title>__init__ (fimpy\fim_np.py:73) (2,811 samples, 0.48%)</title><rect x="13.2660%" y="228" width="0.4847%" height="15" fill="rgb(235,93,37)" fg:x="76938" fg:w="2811"/><text x="13.5160%" y="238.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (931 samples, 0.16%)</title><rect x="13.7584%" y="212" width="0.1605%" height="15" fill="rgb(213,116,39)" fg:x="79794" fg:w="931"/><text x="14.0084%" y="222.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (782 samples, 0.13%)</title><rect x="13.9650%" y="212" width="0.1348%" height="15" fill="rgb(222,207,29)" fg:x="80992" fg:w="782"/><text x="14.2150%" y="222.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:57) (2,228 samples, 0.38%)</title><rect x="13.7506%" y="180" width="0.3842%" height="15" fill="rgb(206,96,30)" fg:x="79749" fg:w="2228"/><text x="14.0006%" y="190.50"></text></g><g><title>comp_fim (fimpy\fim_base.py:487) (2,226 samples, 0.38%)</title><rect x="13.7510%" y="196" width="0.3838%" height="15" fill="rgb(218,138,4)" fg:x="79751" fg:w="2226"/><text x="14.0010%" y="206.50"></text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:300) (5,353 samples, 0.92%)</title><rect x="13.2134%" y="164" width="0.9230%" height="15" fill="rgb(250,191,14)" fg:x="76633" fg:w="5353"/><text x="13.4634%" y="174.50"></text></g><g><title>check_metrics_argument (fimpy\fim_base.py:108) (705 samples, 0.12%)</title><rect x="14.2086%" y="260" width="0.1216%" height="15" fill="rgb(239,60,40)" fg:x="82405" fg:w="705"/><text x="14.4586%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:56) (860 samples, 0.15%)</title><rect x="14.2086%" y="244" width="0.1483%" height="15" fill="rgb(206,27,48)" fg:x="82405" fg:w="860"/><text x="14.4586%" y="254.50"></text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (1,342 samples, 0.23%)</title><rect x="14.8952%" y="276" width="0.2314%" height="15" fill="rgb(225,35,8)" fg:x="86387" fg:w="1342"/><text x="15.1452%" y="286.50"></text></g><g><title>compute_neighborhood_map (fimpy\fim_base.py:142) (4,323 samples, 0.75%)</title><rect x="14.3941%" y="260" width="0.7454%" height="15" fill="rgb(250,213,24)" fg:x="83481" fg:w="4323"/><text x="14.6441%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:69) (4,497 samples, 0.78%)</title><rect x="14.3919%" y="244" width="0.7754%" height="15" fill="rgb(247,123,22)" fg:x="83468" fg:w="4497"/><text x="14.6419%" y="254.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:56) (5,654 samples, 0.97%)</title><rect x="14.2060%" y="180" width="0.9749%" height="15" fill="rgb(231,138,38)" fg:x="82390" fg:w="5654"/><text x="14.4560%" y="190.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:69) (5,652 samples, 0.97%)</title><rect x="14.2064%" y="196" width="0.9745%" height="15" fill="rgb(231,145,46)" fg:x="82392" fg:w="5652"/><text x="14.4564%" y="206.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:58) (5,651 samples, 0.97%)</title><rect x="14.2065%" y="212" width="0.9744%" height="15" fill="rgb(251,118,11)" fg:x="82393" fg:w="5651"/><text x="14.4565%" y="222.50"></text></g><g><title>__init__ (fimpy\fim_np.py:73) (5,651 samples, 0.97%)</title><rect x="14.2065%" y="228" width="0.9744%" height="15" fill="rgb(217,147,25)" fg:x="82393" fg:w="5651"/><text x="14.4565%" y="238.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (1,706 samples, 0.29%)</title><rect x="15.1954%" y="212" width="0.2942%" height="15" fill="rgb(247,81,37)" fg:x="88128" fg:w="1706"/><text x="15.4454%" y="222.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (1,438 samples, 0.25%)</title><rect x="15.5737%" y="212" width="0.2479%" height="15" fill="rgb(209,12,38)" fg:x="90322" fg:w="1438"/><text x="15.8237%" y="222.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:57) (4,021 samples, 0.69%)</title><rect x="15.1809%" y="180" width="0.6933%" height="15" fill="rgb(227,1,9)" fg:x="88044" fg:w="4021"/><text x="15.4309%" y="190.50"></text></g><g><title>comp_fim (fimpy\fim_base.py:487) (4,018 samples, 0.69%)</title><rect x="15.1814%" y="196" width="0.6928%" height="15" fill="rgb(248,47,43)" fg:x="88047" fg:w="4018"/><text x="15.4314%" y="206.50"></text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:303) (10,085 samples, 1.74%)</title><rect x="14.1370%" y="164" width="1.7389%" height="15" fill="rgb(221,10,30)" fg:x="81990" fg:w="10085"/><text x="14.3870%" y="174.50"></text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:306) (679 samples, 0.12%)</title><rect x="15.8966%" y="180" width="0.1171%" height="15" fill="rgb(210,229,1)" fg:x="92195" fg:w="679"/><text x="16.1466%" y="190.50"></text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:307) (1,153 samples, 0.20%)</title><rect x="16.0137%" y="180" width="0.1988%" height="15" fill="rgb(222,148,37)" fg:x="92874" fg:w="1153"/><text x="16.2637%" y="190.50"></text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:312) (1,389 samples, 0.24%)</title><rect x="16.3023%" y="180" width="0.2395%" height="15" fill="rgb(234,67,33)" fg:x="94548" fg:w="1389"/><text x="16.5523%" y="190.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (667 samples, 0.12%)</title><rect x="16.4268%" y="196" width="0.1150%" height="15" fill="rgb(247,98,35)" fg:x="95270" fg:w="667"/><text x="16.6768%" y="206.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (614 samples, 0.11%)</title><rect x="16.4360%" y="212" width="0.1059%" height="15" fill="rgb(247,138,52)" fg:x="95323" fg:w="614"/><text x="16.6860%" y="222.50"></text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:313) (602 samples, 0.10%)</title><rect x="16.5418%" y="180" width="0.1038%" height="15" fill="rgb(213,79,30)" fg:x="95937" fg:w="602"/><text x="16.7918%" y="190.50"></text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (934 samples, 0.16%)</title><rect x="16.7324%" y="244" width="0.1610%" height="15" fill="rgb(246,177,23)" fg:x="97042" fg:w="934"/><text x="16.9824%" y="254.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:120) (1,167 samples, 0.20%)</title><rect x="16.6932%" y="228" width="0.2012%" height="15" fill="rgb(230,62,27)" fg:x="96815" fg:w="1167"/><text x="16.9432%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:121) (606 samples, 0.10%)</title><rect x="16.8944%" y="228" width="0.1045%" height="15" fill="rgb(216,154,8)" fg:x="97982" fg:w="606"/><text x="17.1444%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:123) (4,761 samples, 0.82%)</title><rect x="16.9989%" y="228" width="0.8209%" height="15" fill="rgb(244,35,45)" fg:x="98588" fg:w="4761"/><text x="17.2489%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:126) (2,547 samples, 0.44%)</title><rect x="17.8198%" y="228" width="0.4392%" height="15" fill="rgb(251,115,12)" fg:x="103349" fg:w="2547"/><text x="18.0698%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:131) (982 samples, 0.17%)</title><rect x="18.2590%" y="228" width="0.1693%" height="15" fill="rgb(240,54,50)" fg:x="105896" fg:w="982"/><text x="18.5090%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:132) (2,959 samples, 0.51%)</title><rect x="18.4283%" y="228" width="0.5102%" height="15" fill="rgb(233,84,52)" fg:x="106878" fg:w="2959"/><text x="18.6783%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:135) (1,337 samples, 0.23%)</title><rect x="18.9385%" y="228" width="0.2305%" height="15" fill="rgb(207,117,47)" fg:x="109837" fg:w="1337"/><text x="19.1885%" y="238.50"></text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:435) (622 samples, 0.11%)</title><rect x="19.1741%" y="244" width="0.1072%" height="15" fill="rgb(249,43,39)" fg:x="111203" fg:w="622"/><text x="19.4241%" y="254.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:293) (2,743 samples, 0.47%)</title><rect x="19.3427%" y="276" width="0.4730%" height="15" fill="rgb(209,38,44)" fg:x="112181" fg:w="2743"/><text x="19.5927%" y="286.50"></text></g><g><title>stack (numpy\_core\shape_base.py:464) (2,500 samples, 0.43%)</title><rect x="19.3846%" y="292" width="0.4311%" height="15" fill="rgb(236,212,23)" fg:x="112424" fg:w="2500"/><text x="19.6346%" y="302.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:297) (736 samples, 0.13%)</title><rect x="19.8463%" y="276" width="0.1269%" height="15" fill="rgb(242,79,21)" fg:x="115102" fg:w="736"/><text x="20.0963%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (734 samples, 0.13%)</title><rect x="19.8467%" y="292" width="0.1266%" height="15" fill="rgb(211,96,35)" fg:x="115104" fg:w="734"/><text x="20.0967%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (720 samples, 0.12%)</title><rect x="19.8491%" y="308" width="0.1241%" height="15" fill="rgb(253,215,40)" fg:x="115118" fg:w="720"/><text x="20.0991%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:298) (613 samples, 0.11%)</title><rect x="19.9732%" y="276" width="0.1057%" height="15" fill="rgb(211,81,21)" fg:x="115838" fg:w="613"/><text x="20.2232%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (613 samples, 0.11%)</title><rect x="19.9732%" y="292" width="0.1057%" height="15" fill="rgb(208,190,38)" fg:x="115838" fg:w="613"/><text x="20.2232%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (605 samples, 0.10%)</title><rect x="19.9746%" y="308" width="0.1043%" height="15" fill="rgb(235,213,38)" fg:x="115846" fg:w="605"/><text x="20.2246%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:299) (598 samples, 0.10%)</title><rect x="20.0789%" y="276" width="0.1031%" height="15" fill="rgb(237,122,38)" fg:x="116451" fg:w="598"/><text x="20.3289%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (597 samples, 0.10%)</title><rect x="20.0791%" y="292" width="0.1029%" height="15" fill="rgb(244,218,35)" fg:x="116452" fg:w="597"/><text x="20.3291%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (594 samples, 0.10%)</title><rect x="20.0796%" y="308" width="0.1024%" height="15" fill="rgb(240,68,47)" fg:x="116455" fg:w="594"/><text x="20.3296%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:320) (892 samples, 0.15%)</title><rect x="20.5155%" y="276" width="0.1538%" height="15" fill="rgb(210,16,53)" fg:x="118983" fg:w="892"/><text x="20.7655%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (757 samples, 0.13%)</title><rect x="20.5388%" y="292" width="0.1305%" height="15" fill="rgb(235,124,12)" fg:x="119118" fg:w="757"/><text x="20.7888%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (756 samples, 0.13%)</title><rect x="20.5390%" y="308" width="0.1304%" height="15" fill="rgb(224,169,11)" fg:x="119119" fg:w="756"/><text x="20.7890%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:321) (890 samples, 0.15%)</title><rect x="20.6693%" y="276" width="0.1535%" height="15" fill="rgb(250,166,2)" fg:x="119875" fg:w="890"/><text x="20.9193%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (739 samples, 0.13%)</title><rect x="20.6954%" y="292" width="0.1274%" height="15" fill="rgb(242,216,29)" fg:x="120026" fg:w="739"/><text x="20.9454%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (734 samples, 0.13%)</title><rect x="20.6962%" y="308" width="0.1266%" height="15" fill="rgb(230,116,27)" fg:x="120031" fg:w="734"/><text x="20.9462%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:323) (1,213 samples, 0.21%)</title><rect x="20.8228%" y="276" width="0.2092%" height="15" fill="rgb(228,99,48)" fg:x="120765" fg:w="1213"/><text x="21.0728%" y="286.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (1,984 samples, 0.34%)</title><rect x="21.5773%" y="292" width="0.3421%" height="15" fill="rgb(253,11,6)" fg:x="125141" fg:w="1984"/><text x="21.8273%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (1,965 samples, 0.34%)</title><rect x="21.5806%" y="308" width="0.3388%" height="15" fill="rgb(247,143,39)" fg:x="125160" fg:w="1965"/><text x="21.8306%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:342) (4,231 samples, 0.73%)</title><rect x="21.1902%" y="276" width="0.7295%" height="15" fill="rgb(236,97,10)" fg:x="122896" fg:w="4231"/><text x="21.4402%" y="286.50"></text></g><g><title>_wrapreduction_any_all (numpy\_core\fromnumeric.py:102) (823 samples, 0.14%)</title><rect x="22.0482%" y="308" width="0.1419%" height="15" fill="rgb(233,208,19)" fg:x="127872" fg:w="823"/><text x="22.2982%" y="318.50"></text></g><g><title>any (numpy\_core\fromnumeric.py:2602) (832 samples, 0.14%)</title><rect x="22.0475%" y="292" width="0.1435%" height="15" fill="rgb(216,164,2)" fg:x="127868" fg:w="832"/><text x="22.2975%" y="302.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (587 samples, 0.10%)</title><rect x="22.1911%" y="292" width="0.1012%" height="15" fill="rgb(220,129,5)" fg:x="128701" fg:w="587"/><text x="22.4411%" y="302.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:273) (17,239 samples, 2.97%)</title><rect x="19.3203%" y="260" width="2.9724%" height="15" fill="rgb(242,17,10)" fg:x="112051" fg:w="17239"/><text x="19.5703%" y="270.50">tsi..</text></g><g><title>calculate_tet_update (fimpy\fim_base.py:344) (2,149 samples, 0.37%)</title><rect x="21.9221%" y="276" width="0.3705%" height="15" fill="rgb(242,107,0)" fg:x="127141" fg:w="2149"/><text x="22.1721%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (701 samples, 0.12%)</title><rect x="22.3141%" y="276" width="0.1209%" height="15" fill="rgb(251,28,31)" fg:x="129414" fg:w="701"/><text x="22.5641%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (696 samples, 0.12%)</title><rect x="22.3149%" y="292" width="0.1200%" height="15" fill="rgb(233,223,10)" fg:x="129419" fg:w="696"/><text x="22.5649%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (689 samples, 0.12%)</title><rect x="22.3161%" y="308" width="0.1188%" height="15" fill="rgb(215,21,27)" fg:x="129426" fg:w="689"/><text x="22.5661%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (662 samples, 0.11%)</title><rect x="22.4349%" y="276" width="0.1141%" height="15" fill="rgb(232,23,21)" fg:x="130115" fg:w="662"/><text x="22.6849%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (660 samples, 0.11%)</title><rect x="22.4353%" y="292" width="0.1138%" height="15" fill="rgb(244,5,23)" fg:x="130117" fg:w="660"/><text x="22.6853%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (655 samples, 0.11%)</title><rect x="22.4361%" y="308" width="0.1129%" height="15" fill="rgb(226,81,46)" fg:x="130122" fg:w="655"/><text x="22.6861%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (965 samples, 0.17%)</title><rect x="22.8565%" y="308" width="0.1664%" height="15" fill="rgb(247,70,30)" fg:x="132560" fg:w="965"/><text x="23.1065%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (939 samples, 0.16%)</title><rect x="22.8610%" y="324" width="0.1619%" height="15" fill="rgb(212,68,19)" fg:x="132586" fg:w="939"/><text x="23.1110%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (4,311 samples, 0.74%)</title><rect x="23.0229%" y="308" width="0.7433%" height="15" fill="rgb(240,187,13)" fg:x="133525" fg:w="4311"/><text x="23.2729%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (4,283 samples, 0.74%)</title><rect x="23.0277%" y="324" width="0.7385%" height="15" fill="rgb(223,113,26)" fg:x="133553" fg:w="4283"/><text x="23.2777%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,518 samples, 0.95%)</title><rect x="22.8325%" y="292" width="0.9514%" height="15" fill="rgb(206,192,2)" fg:x="132421" fg:w="5518"/><text x="23.0825%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (807 samples, 0.14%)</title><rect x="23.8395%" y="292" width="0.1391%" height="15" fill="rgb(241,108,4)" fg:x="138261" fg:w="807"/><text x="24.0895%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (7,258 samples, 1.25%)</title><rect x="22.7303%" y="276" width="1.2515%" height="15" fill="rgb(247,173,49)" fg:x="131828" fg:w="7258"/><text x="22.9803%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (590 samples, 0.10%)</title><rect x="23.9855%" y="292" width="0.1017%" height="15" fill="rgb(224,114,35)" fg:x="139108" fg:w="590"/><text x="24.2355%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (590 samples, 0.10%)</title><rect x="23.9855%" y="308" width="0.1017%" height="15" fill="rgb(245,159,27)" fg:x="139108" fg:w="590"/><text x="24.2355%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (581 samples, 0.10%)</title><rect x="23.9871%" y="324" width="0.1002%" height="15" fill="rgb(245,172,44)" fg:x="139117" fg:w="581"/><text x="24.2371%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (590 samples, 0.10%)</title><rect x="24.0873%" y="292" width="0.1017%" height="15" fill="rgb(236,23,11)" fg:x="139698" fg:w="590"/><text x="24.3373%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (589 samples, 0.10%)</title><rect x="24.0874%" y="308" width="0.1016%" height="15" fill="rgb(205,117,38)" fg:x="139699" fg:w="589"/><text x="24.3374%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (581 samples, 0.10%)</title><rect x="24.0888%" y="324" width="0.1002%" height="15" fill="rgb(237,72,25)" fg:x="139707" fg:w="581"/><text x="24.3388%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,062 samples, 0.36%)</title><rect x="23.9818%" y="276" width="0.3555%" height="15" fill="rgb(244,70,9)" fg:x="139086" fg:w="2062"/><text x="24.2318%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:277) (11,822 samples, 2.04%)</title><rect x="22.3072%" y="260" width="2.0384%" height="15" fill="rgb(217,125,39)" fg:x="129374" fg:w="11822"/><text x="22.5572%" y="270.50">t..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (681 samples, 0.12%)</title><rect x="24.4468%" y="276" width="0.1174%" height="15" fill="rgb(235,36,10)" fg:x="141783" fg:w="681"/><text x="24.6968%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (678 samples, 0.12%)</title><rect x="24.4473%" y="292" width="0.1169%" height="15" fill="rgb(251,123,47)" fg:x="141786" fg:w="678"/><text x="24.6973%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (672 samples, 0.12%)</title><rect x="24.4483%" y="308" width="0.1159%" height="15" fill="rgb(221,13,13)" fg:x="141792" fg:w="672"/><text x="24.6983%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (888 samples, 0.15%)</title><rect x="24.8437%" y="308" width="0.1531%" height="15" fill="rgb(238,131,9)" fg:x="144085" fg:w="888"/><text x="25.0937%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (870 samples, 0.15%)</title><rect x="24.8468%" y="324" width="0.1500%" height="15" fill="rgb(211,50,8)" fg:x="144103" fg:w="870"/><text x="25.0968%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (3,983 samples, 0.69%)</title><rect x="24.9968%" y="308" width="0.6868%" height="15" fill="rgb(245,182,24)" fg:x="144973" fg:w="3983"/><text x="25.2468%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (3,968 samples, 0.68%)</title><rect x="24.9994%" y="324" width="0.6842%" height="15" fill="rgb(242,14,37)" fg:x="144988" fg:w="3968"/><text x="25.2494%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,098 samples, 0.88%)</title><rect x="24.8211%" y="292" width="0.8790%" height="15" fill="rgb(246,228,12)" fg:x="143954" fg:w="5098"/><text x="25.0711%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (796 samples, 0.14%)</title><rect x="25.7493%" y="292" width="0.1372%" height="15" fill="rgb(213,55,15)" fg:x="149337" fg:w="796"/><text x="25.9993%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (6,761 samples, 1.17%)</title><rect x="24.7249%" y="276" width="1.1658%" height="15" fill="rgb(209,9,3)" fg:x="143396" fg:w="6761"/><text x="24.9749%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (617 samples, 0.11%)</title><rect x="25.8936%" y="292" width="0.1064%" height="15" fill="rgb(230,59,30)" fg:x="150174" fg:w="617"/><text x="26.1436%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (614 samples, 0.11%)</title><rect x="25.8941%" y="308" width="0.1059%" height="15" fill="rgb(209,121,21)" fg:x="150177" fg:w="614"/><text x="26.1441%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (608 samples, 0.10%)</title><rect x="25.8951%" y="324" width="0.1048%" height="15" fill="rgb(220,109,13)" fg:x="150183" fg:w="608"/><text x="26.1451%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (602 samples, 0.10%)</title><rect x="26.0000%" y="292" width="0.1038%" height="15" fill="rgb(232,18,1)" fg:x="150791" fg:w="602"/><text x="26.2500%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (600 samples, 0.10%)</title><rect x="26.0003%" y="308" width="0.1035%" height="15" fill="rgb(215,41,42)" fg:x="150793" fg:w="600"/><text x="26.2503%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (596 samples, 0.10%)</title><rect x="26.0010%" y="324" width="0.1028%" height="15" fill="rgb(224,123,36)" fg:x="150797" fg:w="596"/><text x="26.2510%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,054 samples, 0.35%)</title><rect x="25.8907%" y="276" width="0.3542%" height="15" fill="rgb(240,125,3)" fg:x="150157" fg:w="2054"/><text x="26.1407%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:278) (11,058 samples, 1.91%)</title><rect x="24.3456%" y="260" width="1.9067%" height="15" fill="rgb(205,98,50)" fg:x="141196" fg:w="11058"/><text x="24.5956%" y="270.50">t..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (612 samples, 0.11%)</title><rect x="26.2607%" y="276" width="0.1055%" height="15" fill="rgb(205,185,37)" fg:x="152303" fg:w="612"/><text x="26.5107%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (610 samples, 0.11%)</title><rect x="26.2610%" y="292" width="0.1052%" height="15" fill="rgb(238,207,15)" fg:x="152305" fg:w="610"/><text x="26.5110%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (604 samples, 0.10%)</title><rect x="26.2621%" y="308" width="0.1041%" height="15" fill="rgb(213,199,42)" fg:x="152311" fg:w="604"/><text x="26.5121%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (624 samples, 0.11%)</title><rect x="26.3662%" y="276" width="0.1076%" height="15" fill="rgb(235,201,11)" fg:x="152915" fg:w="624"/><text x="26.6162%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (622 samples, 0.11%)</title><rect x="26.3665%" y="292" width="0.1072%" height="15" fill="rgb(207,46,11)" fg:x="152917" fg:w="622"/><text x="26.6165%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (619 samples, 0.11%)</title><rect x="26.3671%" y="308" width="0.1067%" height="15" fill="rgb(241,35,35)" fg:x="152920" fg:w="619"/><text x="26.6171%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (931 samples, 0.16%)</title><rect x="26.7479%" y="308" width="0.1605%" height="15" fill="rgb(243,32,47)" fg:x="155129" fg:w="931"/><text x="26.9979%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (906 samples, 0.16%)</title><rect x="26.7523%" y="324" width="0.1562%" height="15" fill="rgb(247,202,23)" fg:x="155154" fg:w="906"/><text x="27.0023%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (4,146 samples, 0.71%)</title><rect x="26.9085%" y="308" width="0.7149%" height="15" fill="rgb(219,102,11)" fg:x="156060" fg:w="4146"/><text x="27.1585%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (4,124 samples, 0.71%)</title><rect x="26.9123%" y="324" width="0.7111%" height="15" fill="rgb(243,110,44)" fg:x="156082" fg:w="4124"/><text x="27.1623%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,312 samples, 0.92%)</title><rect x="26.7236%" y="292" width="0.9159%" height="15" fill="rgb(222,74,54)" fg:x="154988" fg:w="5312"/><text x="26.9736%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (750 samples, 0.13%)</title><rect x="27.6918%" y="292" width="0.1293%" height="15" fill="rgb(216,99,12)" fg:x="160603" fg:w="750"/><text x="27.9418%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (6,901 samples, 1.19%)</title><rect x="26.6355%" y="276" width="1.1899%" height="15" fill="rgb(226,22,26)" fg:x="154477" fg:w="6901"/><text x="26.8855%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (630 samples, 0.11%)</title><rect x="27.8284%" y="292" width="0.1086%" height="15" fill="rgb(217,163,10)" fg:x="161395" fg:w="630"/><text x="28.0784%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (628 samples, 0.11%)</title><rect x="27.8287%" y="308" width="0.1083%" height="15" fill="rgb(213,25,53)" fg:x="161397" fg:w="628"/><text x="28.0787%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (619 samples, 0.11%)</title><rect x="27.8303%" y="324" width="0.1067%" height="15" fill="rgb(252,105,26)" fg:x="161406" fg:w="619"/><text x="28.0803%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (613 samples, 0.11%)</title><rect x="27.9370%" y="292" width="0.1057%" height="15" fill="rgb(220,39,43)" fg:x="162025" fg:w="613"/><text x="28.1870%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (610 samples, 0.11%)</title><rect x="27.9375%" y="308" width="0.1052%" height="15" fill="rgb(229,68,48)" fg:x="162028" fg:w="610"/><text x="28.1875%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (604 samples, 0.10%)</title><rect x="27.9385%" y="324" width="0.1041%" height="15" fill="rgb(252,8,32)" fg:x="162034" fg:w="604"/><text x="28.1885%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,074 samples, 0.36%)</title><rect x="27.8254%" y="276" width="0.3576%" height="15" fill="rgb(223,20,43)" fg:x="161378" fg:w="2074"/><text x="28.0754%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:280) (11,241 samples, 1.94%)</title><rect x="26.2565%" y="260" width="1.9382%" height="15" fill="rgb(229,81,49)" fg:x="152279" fg:w="11241"/><text x="26.5065%" y="270.50">t..</text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:436) (51,714 samples, 8.92%)</title><rect x="19.2813%" y="244" width="8.9167%" height="15" fill="rgb(236,28,36)" fg:x="111825" fg:w="51714"/><text x="19.5313%" y="254.50">calculate_spe..</text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (67,080 samples, 11.57%)</title><rect x="16.6736%" y="212" width="11.5662%" height="15" fill="rgb(249,185,26)" fg:x="96701" fg:w="67080"/><text x="16.9236%" y="222.50">_comp_fim (fimpy\..</text></g><g><title>comp_marked_points (fimpy\fim_np.py:142) (52,607 samples, 9.07%)</title><rect x="19.1691%" y="228" width="9.0707%" height="15" fill="rgb(249,174,33)" fg:x="111174" fg:w="52607"/><text x="19.4191%" y="238.50">comp_marked_p..</text></g><g><title>_unique1d (numpy\lib\_arraysetops_impl.py:358) (610 samples, 0.11%)</title><rect x="28.3906%" y="260" width="0.1052%" height="15" fill="rgb(233,201,37)" fg:x="164656" fg:w="610"/><text x="28.6406%" y="270.50"></text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (1,051 samples, 0.18%)</title><rect x="28.3855%" y="244" width="0.1812%" height="15" fill="rgb(221,78,26)" fg:x="164626" fg:w="1051"/><text x="28.6355%" y="254.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:120) (1,290 samples, 0.22%)</title><rect x="28.3451%" y="228" width="0.2224%" height="15" fill="rgb(250,127,30)" fg:x="164392" fg:w="1290"/><text x="28.5951%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:121) (614 samples, 0.11%)</title><rect x="28.5675%" y="228" width="0.1059%" height="15" fill="rgb(230,49,44)" fg:x="165682" fg:w="614"/><text x="28.8175%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:123) (6,847 samples, 1.18%)</title><rect x="28.6734%" y="228" width="1.1806%" height="15" fill="rgb(229,67,23)" fg:x="166296" fg:w="6847"/><text x="28.9234%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:126) (2,873 samples, 0.50%)</title><rect x="29.8540%" y="228" width="0.4954%" height="15" fill="rgb(249,83,47)" fg:x="173143" fg:w="2873"/><text x="30.1040%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:131) (1,285 samples, 0.22%)</title><rect x="30.3494%" y="228" width="0.2216%" height="15" fill="rgb(215,43,3)" fg:x="176016" fg:w="1285"/><text x="30.5994%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:132) (3,761 samples, 0.65%)</title><rect x="30.5709%" y="228" width="0.6485%" height="15" fill="rgb(238,154,13)" fg:x="177301" fg:w="3761"/><text x="30.8209%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:135) (1,817 samples, 0.31%)</title><rect x="31.2194%" y="228" width="0.3133%" height="15" fill="rgb(219,56,2)" fg:x="181062" fg:w="1817"/><text x="31.4694%" y="238.50"></text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:435) (789 samples, 0.14%)</title><rect x="31.5379%" y="244" width="0.1360%" height="15" fill="rgb(233,0,4)" fg:x="182909" fg:w="789"/><text x="31.7879%" y="254.50"></text></g><g><title>stack (numpy\_core\shape_base.py:464) (3,443 samples, 0.59%)</title><rect x="31.7808%" y="292" width="0.5937%" height="15" fill="rgb(235,30,7)" fg:x="184318" fg:w="3443"/><text x="32.0308%" y="302.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:293) (3,679 samples, 0.63%)</title><rect x="31.7403%" y="276" width="0.6343%" height="15" fill="rgb(250,79,13)" fg:x="184083" fg:w="3679"/><text x="31.9903%" y="286.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:297) (966 samples, 0.17%)</title><rect x="32.4148%" y="276" width="0.1666%" height="15" fill="rgb(211,146,34)" fg:x="187995" fg:w="966"/><text x="32.6648%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (965 samples, 0.17%)</title><rect x="32.4150%" y="292" width="0.1664%" height="15" fill="rgb(228,22,38)" fg:x="187996" fg:w="965"/><text x="32.6650%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (952 samples, 0.16%)</title><rect x="32.4172%" y="308" width="0.1641%" height="15" fill="rgb(235,168,5)" fg:x="188009" fg:w="952"/><text x="32.6672%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:298) (879 samples, 0.15%)</title><rect x="32.5814%" y="276" width="0.1516%" height="15" fill="rgb(221,155,16)" fg:x="188961" fg:w="879"/><text x="32.8314%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (878 samples, 0.15%)</title><rect x="32.5816%" y="292" width="0.1514%" height="15" fill="rgb(215,215,53)" fg:x="188962" fg:w="878"/><text x="32.8316%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (871 samples, 0.15%)</title><rect x="32.5828%" y="308" width="0.1502%" height="15" fill="rgb(223,4,10)" fg:x="188969" fg:w="871"/><text x="32.8328%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:299) (898 samples, 0.15%)</title><rect x="32.7330%" y="276" width="0.1548%" height="15" fill="rgb(234,103,6)" fg:x="189840" fg:w="898"/><text x="32.9830%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (896 samples, 0.15%)</title><rect x="32.7333%" y="292" width="0.1545%" height="15" fill="rgb(227,97,0)" fg:x="189842" fg:w="896"/><text x="32.9833%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (890 samples, 0.15%)</title><rect x="32.7343%" y="308" width="0.1535%" height="15" fill="rgb(234,150,53)" fg:x="189848" fg:w="890"/><text x="32.9843%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:320) (1,162 samples, 0.20%)</title><rect x="33.2894%" y="276" width="0.2004%" height="15" fill="rgb(228,201,54)" fg:x="193067" fg:w="1162"/><text x="33.5394%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (993 samples, 0.17%)</title><rect x="33.3185%" y="292" width="0.1712%" height="15" fill="rgb(222,22,37)" fg:x="193236" fg:w="993"/><text x="33.5685%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (985 samples, 0.17%)</title><rect x="33.3199%" y="308" width="0.1698%" height="15" fill="rgb(237,53,32)" fg:x="193244" fg:w="985"/><text x="33.5699%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:321) (1,176 samples, 0.20%)</title><rect x="33.4897%" y="276" width="0.2028%" height="15" fill="rgb(233,25,53)" fg:x="194229" fg:w="1176"/><text x="33.7397%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (989 samples, 0.17%)</title><rect x="33.5220%" y="292" width="0.1705%" height="15" fill="rgb(210,40,34)" fg:x="194416" fg:w="989"/><text x="33.7720%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (987 samples, 0.17%)</title><rect x="33.5223%" y="308" width="0.1702%" height="15" fill="rgb(241,220,44)" fg:x="194418" fg:w="987"/><text x="33.7723%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:323) (1,260 samples, 0.22%)</title><rect x="33.6925%" y="276" width="0.2173%" height="15" fill="rgb(235,28,35)" fg:x="195405" fg:w="1260"/><text x="33.9425%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (663 samples, 0.11%)</title><rect x="34.5456%" y="292" width="0.1143%" height="15" fill="rgb(210,56,17)" fg:x="200353" fg:w="663"/><text x="34.7956%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (657 samples, 0.11%)</title><rect x="34.5467%" y="308" width="0.1133%" height="15" fill="rgb(224,130,29)" fg:x="200359" fg:w="657"/><text x="34.7967%" y="318.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (2,702 samples, 0.47%)</title><rect x="34.6608%" y="292" width="0.4659%" height="15" fill="rgb(235,212,8)" fg:x="201021" fg:w="2702"/><text x="34.9108%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (2,670 samples, 0.46%)</title><rect x="34.6663%" y="308" width="0.4604%" height="15" fill="rgb(223,33,50)" fg:x="201053" fg:w="2670"/><text x="34.9163%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:342) (5,968 samples, 1.03%)</title><rect x="34.0980%" y="276" width="1.0290%" height="15" fill="rgb(219,149,13)" fg:x="197757" fg:w="5968"/><text x="34.3480%" y="286.50"></text></g><g><title>_wrapreduction_any_all (numpy\_core\fromnumeric.py:102) (1,234 samples, 0.21%)</title><rect x="35.2836%" y="308" width="0.2128%" height="15" fill="rgb(250,156,29)" fg:x="204633" fg:w="1234"/><text x="35.5336%" y="318.50"></text></g><g><title>any (numpy\_core\fromnumeric.py:2602) (1,263 samples, 0.22%)</title><rect x="35.2803%" y="292" width="0.2178%" height="15" fill="rgb(216,193,19)" fg:x="204614" fg:w="1263"/><text x="35.5303%" y="302.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (843 samples, 0.15%)</title><rect x="35.4981%" y="292" width="0.1454%" height="15" fill="rgb(216,135,14)" fg:x="205877" fg:w="843"/><text x="35.7481%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (830 samples, 0.14%)</title><rect x="35.5004%" y="308" width="0.1431%" height="15" fill="rgb(241,47,5)" fg:x="205890" fg:w="830"/><text x="35.7504%" y="318.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:273) (22,818 samples, 3.93%)</title><rect x="31.7094%" y="260" width="3.9344%" height="15" fill="rgb(233,42,35)" fg:x="183904" fg:w="22818"/><text x="31.9594%" y="270.50">tsit..</text></g><g><title>calculate_tet_update (fimpy\fim_base.py:344) (2,984 samples, 0.51%)</title><rect x="35.1293%" y="276" width="0.5145%" height="15" fill="rgb(231,13,6)" fg:x="203738" fg:w="2984"/><text x="35.3793%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (917 samples, 0.16%)</title><rect x="35.6680%" y="276" width="0.1581%" height="15" fill="rgb(207,181,40)" fg:x="206862" fg:w="917"/><text x="35.9180%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (914 samples, 0.16%)</title><rect x="35.6685%" y="292" width="0.1576%" height="15" fill="rgb(254,173,49)" fg:x="206865" fg:w="914"/><text x="35.9185%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (907 samples, 0.16%)</title><rect x="35.6697%" y="308" width="0.1564%" height="15" fill="rgb(221,1,38)" fg:x="206872" fg:w="907"/><text x="35.9197%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (887 samples, 0.15%)</title><rect x="35.8261%" y="276" width="0.1529%" height="15" fill="rgb(206,124,46)" fg:x="207779" fg:w="887"/><text x="36.0761%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (887 samples, 0.15%)</title><rect x="35.8261%" y="292" width="0.1529%" height="15" fill="rgb(249,21,11)" fg:x="207779" fg:w="887"/><text x="36.0761%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (880 samples, 0.15%)</title><rect x="35.8273%" y="308" width="0.1517%" height="15" fill="rgb(222,201,40)" fg:x="207786" fg:w="880"/><text x="36.0773%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (1,147 samples, 0.20%)</title><rect x="36.3166%" y="308" width="0.1978%" height="15" fill="rgb(235,61,29)" fg:x="210624" fg:w="1147"/><text x="36.5666%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (1,133 samples, 0.20%)</title><rect x="36.3190%" y="324" width="0.1954%" height="15" fill="rgb(219,207,3)" fg:x="210638" fg:w="1133"/><text x="36.5690%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (5,531 samples, 0.95%)</title><rect x="36.5144%" y="308" width="0.9537%" height="15" fill="rgb(222,56,46)" fg:x="211771" fg:w="5531"/><text x="36.7644%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (5,496 samples, 0.95%)</title><rect x="36.5204%" y="324" width="0.9476%" height="15" fill="rgb(239,76,54)" fg:x="211806" fg:w="5496"/><text x="36.7704%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (6,958 samples, 1.20%)</title><rect x="36.2913%" y="292" width="1.1997%" height="15" fill="rgb(231,124,27)" fg:x="210477" fg:w="6958"/><text x="36.5413%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (889 samples, 0.15%)</title><rect x="37.5627%" y="292" width="0.1533%" height="15" fill="rgb(249,195,6)" fg:x="217851" fg:w="889"/><text x="37.8127%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (8,972 samples, 1.55%)</title><rect x="36.1745%" y="276" width="1.5470%" height="15" fill="rgb(237,174,47)" fg:x="209800" fg:w="8972"/><text x="36.4245%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (792 samples, 0.14%)</title><rect x="37.7250%" y="292" width="0.1366%" height="15" fill="rgb(206,201,31)" fg:x="218792" fg:w="792"/><text x="37.9750%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (790 samples, 0.14%)</title><rect x="37.7253%" y="308" width="0.1362%" height="15" fill="rgb(231,57,52)" fg:x="218794" fg:w="790"/><text x="37.9753%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (780 samples, 0.13%)</title><rect x="37.7270%" y="324" width="0.1345%" height="15" fill="rgb(248,177,22)" fg:x="218804" fg:w="780"/><text x="37.9770%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (838 samples, 0.14%)</title><rect x="37.8615%" y="292" width="0.1445%" height="15" fill="rgb(215,211,37)" fg:x="219584" fg:w="838"/><text x="38.1115%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (837 samples, 0.14%)</title><rect x="37.8617%" y="308" width="0.1443%" height="15" fill="rgb(241,128,51)" fg:x="219585" fg:w="837"/><text x="38.1117%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (830 samples, 0.14%)</title><rect x="37.8629%" y="324" width="0.1431%" height="15" fill="rgb(227,165,31)" fg:x="219592" fg:w="830"/><text x="38.1129%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,639 samples, 0.46%)</title><rect x="37.7215%" y="276" width="0.4550%" height="15" fill="rgb(228,167,24)" fg:x="218772" fg:w="2639"/><text x="37.9715%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:277) (14,672 samples, 2.53%)</title><rect x="35.6580%" y="260" width="2.5298%" height="15" fill="rgb(228,143,12)" fg:x="206804" fg:w="14672"/><text x="35.9080%" y="270.50">ts..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (803 samples, 0.14%)</title><rect x="38.1919%" y="276" width="0.1385%" height="15" fill="rgb(249,149,8)" fg:x="221500" fg:w="803"/><text x="38.4419%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (803 samples, 0.14%)</title><rect x="38.1919%" y="292" width="0.1385%" height="15" fill="rgb(243,35,44)" fg:x="221500" fg:w="803"/><text x="38.4419%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (795 samples, 0.14%)</title><rect x="38.1933%" y="308" width="0.1371%" height="15" fill="rgb(246,89,9)" fg:x="221508" fg:w="795"/><text x="38.4433%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (817 samples, 0.14%)</title><rect x="38.3304%" y="276" width="0.1409%" height="15" fill="rgb(233,213,13)" fg:x="222303" fg:w="817"/><text x="38.5804%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (815 samples, 0.14%)</title><rect x="38.3307%" y="292" width="0.1405%" height="15" fill="rgb(233,141,41)" fg:x="222305" fg:w="815"/><text x="38.5807%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (806 samples, 0.14%)</title><rect x="38.3322%" y="308" width="0.1390%" height="15" fill="rgb(239,167,4)" fg:x="222314" fg:w="806"/><text x="38.5822%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (1,203 samples, 0.21%)</title><rect x="38.7976%" y="308" width="0.2074%" height="15" fill="rgb(209,217,16)" fg:x="225013" fg:w="1203"/><text x="39.0476%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (1,188 samples, 0.20%)</title><rect x="38.8002%" y="324" width="0.2048%" height="15" fill="rgb(219,88,35)" fg:x="225028" fg:w="1188"/><text x="39.0502%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (5,447 samples, 0.94%)</title><rect x="39.0050%" y="308" width="0.9392%" height="15" fill="rgb(220,193,23)" fg:x="226216" fg:w="5447"/><text x="39.2550%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (5,420 samples, 0.93%)</title><rect x="39.0097%" y="324" width="0.9345%" height="15" fill="rgb(230,90,52)" fg:x="226243" fg:w="5420"/><text x="39.2597%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (6,887 samples, 1.19%)</title><rect x="38.7724%" y="292" width="1.1875%" height="15" fill="rgb(252,106,19)" fg:x="224867" fg:w="6887"/><text x="39.0224%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (871 samples, 0.15%)</title><rect x="40.0241%" y="292" width="0.1502%" height="15" fill="rgb(206,74,20)" fg:x="232126" fg:w="871"/><text x="40.2741%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (8,837 samples, 1.52%)</title><rect x="38.6550%" y="276" width="1.5237%" height="15" fill="rgb(230,138,44)" fg:x="224186" fg:w="8837"/><text x="38.9050%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (770 samples, 0.13%)</title><rect x="40.1803%" y="292" width="0.1328%" height="15" fill="rgb(235,182,43)" fg:x="233032" fg:w="770"/><text x="40.4303%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (769 samples, 0.13%)</title><rect x="40.1805%" y="308" width="0.1326%" height="15" fill="rgb(242,16,51)" fg:x="233033" fg:w="769"/><text x="40.4305%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (758 samples, 0.13%)</title><rect x="40.1824%" y="324" width="0.1307%" height="15" fill="rgb(248,9,4)" fg:x="233044" fg:w="758"/><text x="40.4324%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (750 samples, 0.13%)</title><rect x="40.3131%" y="292" width="0.1293%" height="15" fill="rgb(210,31,22)" fg:x="233802" fg:w="750"/><text x="40.5631%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (750 samples, 0.13%)</title><rect x="40.3131%" y="308" width="0.1293%" height="15" fill="rgb(239,54,39)" fg:x="233802" fg:w="750"/><text x="40.5631%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (742 samples, 0.13%)</title><rect x="40.3144%" y="324" width="0.1279%" height="15" fill="rgb(230,99,41)" fg:x="233810" fg:w="742"/><text x="40.5644%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,454 samples, 0.42%)</title><rect x="40.1787%" y="276" width="0.4231%" height="15" fill="rgb(253,106,12)" fg:x="233023" fg:w="2454"/><text x="40.4287%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:278) (14,066 samples, 2.43%)</title><rect x="38.1878%" y="260" width="2.4253%" height="15" fill="rgb(213,46,41)" fg:x="221476" fg:w="14066"/><text x="38.4378%" y="270.50">ts..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (742 samples, 0.13%)</title><rect x="40.6220%" y="276" width="0.1279%" height="15" fill="rgb(215,133,35)" fg:x="235594" fg:w="742"/><text x="40.8720%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (740 samples, 0.13%)</title><rect x="40.6224%" y="292" width="0.1276%" height="15" fill="rgb(213,28,5)" fg:x="235596" fg:w="740"/><text x="40.8724%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (732 samples, 0.13%)</title><rect x="40.6238%" y="308" width="0.1262%" height="15" fill="rgb(215,77,49)" fg:x="235604" fg:w="732"/><text x="40.8738%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (773 samples, 0.13%)</title><rect x="40.7500%" y="276" width="0.1333%" height="15" fill="rgb(248,100,22)" fg:x="236336" fg:w="773"/><text x="41.0000%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (773 samples, 0.13%)</title><rect x="40.7500%" y="292" width="0.1333%" height="15" fill="rgb(208,67,9)" fg:x="236336" fg:w="773"/><text x="41.0000%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (769 samples, 0.13%)</title><rect x="40.7507%" y="308" width="0.1326%" height="15" fill="rgb(219,133,21)" fg:x="236340" fg:w="769"/><text x="41.0007%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (1,109 samples, 0.19%)</title><rect x="41.1936%" y="308" width="0.1912%" height="15" fill="rgb(246,46,29)" fg:x="238909" fg:w="1109"/><text x="41.4436%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (1,086 samples, 0.19%)</title><rect x="41.1976%" y="324" width="0.1873%" height="15" fill="rgb(246,185,52)" fg:x="238932" fg:w="1086"/><text x="41.4476%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (5,471 samples, 0.94%)</title><rect x="41.3848%" y="308" width="0.9433%" height="15" fill="rgb(252,136,11)" fg:x="240018" fg:w="5471"/><text x="41.6348%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (5,441 samples, 0.94%)</title><rect x="41.3900%" y="324" width="0.9382%" height="15" fill="rgb(219,138,53)" fg:x="240048" fg:w="5441"/><text x="41.6400%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (6,828 samples, 1.18%)</title><rect x="41.1702%" y="292" width="1.1773%" height="15" fill="rgb(211,51,23)" fg:x="238773" fg:w="6828"/><text x="41.4202%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (900 samples, 0.16%)</title><rect x="42.4158%" y="292" width="0.1552%" height="15" fill="rgb(247,221,28)" fg:x="245997" fg:w="900"/><text x="42.6658%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (8,762 samples, 1.51%)</title><rect x="41.0641%" y="276" width="1.5108%" height="15" fill="rgb(251,222,45)" fg:x="238158" fg:w="8762"/><text x="41.3141%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (801 samples, 0.14%)</title><rect x="42.5777%" y="292" width="0.1381%" height="15" fill="rgb(217,162,53)" fg:x="246936" fg:w="801"/><text x="42.8277%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (801 samples, 0.14%)</title><rect x="42.5777%" y="308" width="0.1381%" height="15" fill="rgb(229,93,14)" fg:x="246936" fg:w="801"/><text x="42.8277%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (793 samples, 0.14%)</title><rect x="42.5790%" y="324" width="0.1367%" height="15" fill="rgb(209,67,49)" fg:x="246944" fg:w="793"/><text x="42.8290%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (822 samples, 0.14%)</title><rect x="42.7158%" y="292" width="0.1417%" height="15" fill="rgb(213,87,29)" fg:x="247737" fg:w="822"/><text x="42.9658%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (820 samples, 0.14%)</title><rect x="42.7161%" y="308" width="0.1414%" height="15" fill="rgb(205,151,52)" fg:x="247739" fg:w="820"/><text x="42.9661%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (815 samples, 0.14%)</title><rect x="42.7170%" y="324" width="0.1405%" height="15" fill="rgb(253,215,39)" fg:x="247744" fg:w="815"/><text x="42.9670%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,636 samples, 0.45%)</title><rect x="42.5749%" y="276" width="0.4545%" height="15" fill="rgb(221,220,41)" fg:x="246920" fg:w="2636"/><text x="42.8249%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:280) (14,079 samples, 2.43%)</title><rect x="40.6169%" y="260" width="2.4276%" height="15" fill="rgb(218,133,21)" fg:x="235564" fg:w="14079"/><text x="40.8669%" y="270.50">ts..</text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:436) (65,965 samples, 11.37%)</title><rect x="31.6739%" y="244" width="11.3739%" height="15" fill="rgb(221,193,43)" fg:x="183698" fg:w="65965"/><text x="31.9239%" y="254.50">calculate_specifi..</text></g><g><title>comp_marked_points (fimpy\fim_np.py:142) (67,143 samples, 11.58%)</title><rect x="31.5327%" y="228" width="11.5771%" height="15" fill="rgb(240,128,52)" fg:x="182879" fg:w="67143"/><text x="31.7827%" y="238.50">comp_marked_point..</text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (85,802 samples, 14.79%)</title><rect x="28.3158%" y="212" width="14.7943%" height="15" fill="rgb(253,114,12)" fg:x="164222" fg:w="85802"/><text x="28.5658%" y="222.50">_comp_fim (fimpy\fim_np..</text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:322) (153,646 samples, 26.49%)</title><rect x="16.6599%" y="180" width="26.4922%" height="15" fill="rgb(215,223,47)" fg:x="96622" fg:w="153646"/><text x="16.9099%" y="190.50">activate_fim (myocardial_mesh\MyocardialMe..</text></g><g><title>comp_fim (fimpy\fim_base.py:487) (153,645 samples, 26.49%)</title><rect x="16.6601%" y="196" width="26.4921%" height="15" fill="rgb(248,225,23)" fg:x="96623" fg:w="153645"/><text x="16.9101%" y="206.50">comp_fim (fimpy\fim_base.py:487)</text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:308) (158,817 samples, 27.38%)</title><rect x="15.8764%" y="164" width="27.3838%" height="15" fill="rgb(250,108,0)" fg:x="92078" fg:w="158817"/><text x="16.1264%" y="174.50">_activate_purkinje_and_myo (src\bo_purkinje_..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:407) (174,284 samples, 30.05%)</title><rect x="13.2134%" y="148" width="30.0507%" height="15" fill="rgb(228,208,7)" fg:x="76633" fg:w="174284"/><text x="13.4634%" y="158.50">run_ECG (src\bo_purkinje_tree.py:407)</text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:418) (5,024 samples, 0.87%)</title><rect x="43.2672%" y="164" width="0.8663%" height="15" fill="rgb(244,45,10)" fg:x="250935" fg:w="5024"/><text x="43.5172%" y="174.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (661 samples, 0.11%)</title><rect x="44.0195%" y="180" width="0.1140%" height="15" fill="rgb(207,125,25)" fg:x="255298" fg:w="661"/><text x="44.2695%" y="190.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (628 samples, 0.11%)</title><rect x="44.0252%" y="196" width="0.1083%" height="15" fill="rgb(210,195,18)" fg:x="255331" fg:w="628"/><text x="44.2752%" y="206.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:441) (695 samples, 0.12%)</title><rect x="44.1366%" y="164" width="0.1198%" height="15" fill="rgb(249,80,12)" fg:x="255977" fg:w="695"/><text x="44.3866%" y="174.50"></text></g><g><title>_matmul_vector (scipy\sparse\_compressed.py:526) (9,102 samples, 1.57%)</title><rect x="44.5849%" y="228" width="1.5694%" height="15" fill="rgb(221,65,9)" fg:x="258577" fg:w="9102"/><text x="44.8349%" y="238.50"></text></g><g><title>_matmul_dispatch (scipy\sparse\_base.py:658) (11,391 samples, 1.96%)</title><rect x="44.4379%" y="212" width="1.9641%" height="15" fill="rgb(235,49,36)" fg:x="257725" fg:w="11391"/><text x="44.6879%" y="222.50">_..</text></g><g><title>ravel (numpy\_core\fromnumeric.py:2020) (1,361 samples, 0.23%)</title><rect x="46.1674%" y="228" width="0.2347%" height="15" fill="rgb(225,32,20)" fg:x="267755" fg:w="1361"/><text x="46.4174%" y="238.50"></text></g><g><title>__array_finalize__ (vtkmodules\numpy_interface\dataset_adapter.py:286) (984 samples, 0.17%)</title><rect x="46.2324%" y="244" width="0.1697%" height="15" fill="rgb(215,141,46)" fg:x="268132" fg:w="984"/><text x="46.4824%" y="254.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:442) (12,500 samples, 2.16%)</title><rect x="44.2564%" y="164" width="2.1553%" height="15" fill="rgb(250,160,47)" fg:x="256672" fg:w="12500"/><text x="44.5064%" y="174.50">n..</text></g><g><title>dot (scipy\sparse\_base.py:497) (12,195 samples, 2.10%)</title><rect x="44.3090%" y="180" width="2.1027%" height="15" fill="rgb(216,222,40)" fg:x="256977" fg:w="12195"/><text x="44.5590%" y="190.50">d..</text></g><g><title>__matmul__ (scipy\sparse\_base.py:732) (11,923 samples, 2.06%)</title><rect x="44.3559%" y="196" width="2.0558%" height="15" fill="rgb(234,217,39)" fg:x="257249" fg:w="11923"/><text x="44.6059%" y="206.50">_..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:421) (18,258 samples, 3.15%)</title><rect x="43.2641%" y="148" width="3.1481%" height="15" fill="rgb(207,178,40)" fg:x="250917" fg:w="18258"/><text x="43.5141%" y="158.50">run..</text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:418) (1,569 samples, 0.27%)</title><rect x="46.4170%" y="164" width="0.2705%" height="15" fill="rgb(221,136,13)" fg:x="269203" fg:w="1569"/><text x="46.6670%" y="174.50"></text></g><g><title>_matmul_vector (scipy\sparse\_compressed.py:526) (2,622 samples, 0.45%)</title><rect x="46.8133%" y="228" width="0.4521%" height="15" fill="rgb(249,199,10)" fg:x="271501" fg:w="2622"/><text x="47.0633%" y="238.50"></text></g><g><title>_matmul_dispatch (scipy\sparse\_base.py:658) (3,260 samples, 0.56%)</title><rect x="46.7729%" y="212" width="0.5621%" height="15" fill="rgb(249,222,13)" fg:x="271267" fg:w="3260"/><text x="47.0229%" y="222.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:442) (3,565 samples, 0.61%)</title><rect x="46.7222%" y="164" width="0.6147%" height="15" fill="rgb(244,185,38)" fg:x="270973" fg:w="3565"/><text x="46.9722%" y="174.50"></text></g><g><title>dot (scipy\sparse\_base.py:497) (3,488 samples, 0.60%)</title><rect x="46.7355%" y="180" width="0.6014%" height="15" fill="rgb(236,202,9)" fg:x="271050" fg:w="3488"/><text x="46.9855%" y="190.50"></text></g><g><title>__matmul__ (scipy\sparse\_base.py:732) (3,397 samples, 0.59%)</title><rect x="46.7512%" y="196" width="0.5857%" height="15" fill="rgb(250,229,37)" fg:x="271141" fg:w="3397"/><text x="47.0012%" y="206.50"></text></g><g><title>f (src\bo_ecg.py:379) (273,039 samples, 47.08%)</title><rect x="0.2593%" y="132" width="47.0784%" height="15" fill="rgb(206,174,23)" fg:x="1504" fg:w="273039"/><text x="0.5093%" y="142.50">f (src\bo_ecg.py:379)</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:432) (5,352 samples, 0.92%)</title><rect x="46.4150%" y="148" width="0.9228%" height="15" fill="rgb(211,33,43)" fg:x="269191" fg:w="5352"/><text x="46.6650%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (src\bo_ecg.py:435) (273,177 samples, 47.10%)</title><rect x="0.2505%" y="116" width="47.1022%" height="15" fill="rgb(245,58,50)" fg:x="1453" fg:w="273177"/><text x="0.5005%" y="126.50">&lt;listcomp&gt; (src\bo_ecg.py:435)</text></g><g><title>main (src\ecg_reference_demo.py:446) (273,180 samples, 47.10%)</title><rect x="0.2502%" y="84" width="47.1028%" height="15" fill="rgb(244,68,36)" fg:x="1451" fg:w="273180"/><text x="0.5002%" y="94.50">main (src\ecg_reference_demo.py:446)</text></g><g><title>set_initial_training_data (src\bo_ecg.py:435) (273,178 samples, 47.10%)</title><rect x="0.2505%" y="100" width="47.1024%" height="15" fill="rgb(232,229,15)" fg:x="1453" fg:w="273178"/><text x="0.5005%" y="110.50">set_initial_training_data (src\bo_ecg.py:435)</text></g><g><title>from_hlo (jax\_src\interpreters\pxla.py:2952) (638 samples, 0.11%)</title><rect x="47.4404%" y="196" width="0.1100%" height="15" fill="rgb(254,30,23)" fg:x="275138" fg:w="638"/><text x="47.6904%" y="206.50"></text></g><g><title>_cached_compilation (jax\_src\interpreters\pxla.py:2743) (631 samples, 0.11%)</title><rect x="47.4416%" y="212" width="0.1088%" height="15" fill="rgb(235,160,14)" fg:x="275145" fg:w="631"/><text x="47.6916%" y="222.50"></text></g><g><title>compile_or_get_cached (jax\_src\compiler.py:500) (620 samples, 0.11%)</title><rect x="47.4435%" y="228" width="0.1069%" height="15" fill="rgb(212,155,44)" fg:x="275156" fg:w="620"/><text x="47.6935%" y="238.50"></text></g><g><title>_compile_and_write_cache (jax\_src\compiler.py:768) (620 samples, 0.11%)</title><rect x="47.4435%" y="244" width="0.1069%" height="15" fill="rgb(226,2,50)" fg:x="275156" fg:w="620"/><text x="47.6935%" y="254.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (620 samples, 0.11%)</title><rect x="47.4435%" y="260" width="0.1069%" height="15" fill="rgb(234,177,6)" fg:x="275156" fg:w="620"/><text x="47.6935%" y="270.50"></text></g><g><title>backend_compile_and_load (jax\_src\compiler.py:385) (613 samples, 0.11%)</title><rect x="47.4447%" y="276" width="0.1057%" height="15" fill="rgb(217,24,9)" fg:x="275163" fg:w="613"/><text x="47.6947%" y="286.50"></text></g><g><title>compile (jax\_src\interpreters\pxla.py:2410) (640 samples, 0.11%)</title><rect x="47.4404%" y="180" width="0.1104%" height="15" fill="rgb(220,13,46)" fg:x="275138" fg:w="640"/><text x="47.6904%" y="190.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1855) (641 samples, 0.11%)</title><rect x="47.4404%" y="164" width="0.1105%" height="15" fill="rgb(239,221,27)" fg:x="275138" fg:w="641"/><text x="47.6904%" y="174.50"></text></g><g><title>bo_loop (src\bo_ecg.py:731) (1,108 samples, 0.19%)</title><rect x="47.3600%" y="100" width="0.1910%" height="15" fill="rgb(222,198,25)" fg:x="274672" fg:w="1108"/><text x="47.6100%" y="110.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (1,108 samples, 0.19%)</title><rect x="47.3600%" y="116" width="0.1910%" height="15" fill="rgb(211,99,13)" fg:x="274672" fg:w="1108"/><text x="47.6100%" y="126.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (1,108 samples, 0.19%)</title><rect x="47.3600%" y="132" width="0.1910%" height="15" fill="rgb(232,111,31)" fg:x="274672" fg:w="1108"/><text x="47.6100%" y="142.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (955 samples, 0.16%)</title><rect x="47.3864%" y="148" width="0.1647%" height="15" fill="rgb(245,82,37)" fg:x="274825" fg:w="955"/><text x="47.6364%" y="158.50"></text></g><g><title>bind (jax\_src\core.py:536) (608 samples, 0.10%)</title><rect x="47.6473%" y="1108" width="0.1048%" height="15" fill="rgb(227,149,46)" fg:x="276338" fg:w="608"/><text x="47.8973%" y="1118.50"></text></g><g><title>_true_bind (jax\_src\core.py:552) (608 samples, 0.10%)</title><rect x="47.6473%" y="1124" width="0.1048%" height="15" fill="rgb(218,36,50)" fg:x="276338" fg:w="608"/><text x="47.8973%" y="1134.50"></text></g><g><title>bind_with_trace (jax\_src\core.py:562) (606 samples, 0.10%)</title><rect x="47.6476%" y="1140" width="0.1045%" height="15" fill="rgb(226,80,48)" fg:x="276340" fg:w="606"/><text x="47.8976%" y="1150.50"></text></g><g><title>process_primitive (jax\_src\interpreters\ad.py:500) (597 samples, 0.10%)</title><rect x="47.6492%" y="1156" width="0.1029%" height="15" fill="rgb(238,224,15)" fg:x="276349" fg:w="597"/><text x="47.8992%" y="1166.50"></text></g><g><title>eval_jaxpr (jax\_src\core.py:630) (612 samples, 0.11%)</title><rect x="47.6468%" y="1092" width="0.1055%" height="15" fill="rgb(241,136,10)" fg:x="276335" fg:w="612"/><text x="47.8968%" y="1102.50"></text></g><g><title>jvpfun (jax\_src\interpreters\ad.py:81) (621 samples, 0.11%)</title><rect x="47.6456%" y="1044" width="0.1071%" height="15" fill="rgb(208,32,45)" fg:x="276328" fg:w="621"/><text x="47.8956%" y="1054.50"></text></g><g><title>jvp_subtrace (jax\_src\interpreters\ad.py:136) (619 samples, 0.11%)</title><rect x="47.6459%" y="1060" width="0.1067%" height="15" fill="rgb(207,135,9)" fg:x="276330" fg:w="619"/><text x="47.8959%" y="1070.50"></text></g><g><title>jaxpr_as_fun (jax\_src\core.py:296) (618 samples, 0.11%)</title><rect x="47.6461%" y="1076" width="0.1066%" height="15" fill="rgb(206,86,44)" fg:x="276331" fg:w="618"/><text x="47.8961%" y="1086.50"></text></g><g><title>trace_to_jaxpr_dynamic (jax\_src\interpreters\partial_eval.py:2292) (625 samples, 0.11%)</title><rect x="47.6452%" y="996" width="0.1078%" height="15" fill="rgb(245,177,15)" fg:x="276326" fg:w="625"/><text x="47.8952%" y="1006.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (625 samples, 0.11%)</title><rect x="47.6452%" y="1012" width="0.1078%" height="15" fill="rgb(206,64,50)" fg:x="276326" fg:w="625"/><text x="47.8952%" y="1022.50"></text></g><g><title>f_jvp_traceable (jax\_src\interpreters\ad.py:1206) (623 samples, 0.11%)</title><rect x="47.6456%" y="1028" width="0.1074%" height="15" fill="rgb(234,36,40)" fg:x="276328" fg:w="623"/><text x="47.8956%" y="1038.50"></text></g><g><title>_pjit_jvp (jax\_src\pjit.py:2237) (629 samples, 0.11%)</title><rect x="47.6447%" y="932" width="0.1085%" height="15" fill="rgb(213,64,8)" fg:x="276323" fg:w="629"/><text x="47.8947%" y="942.50"></text></g><g><title>jvp_jaxpr (jax\_src\interpreters\ad.py:1182) (629 samples, 0.11%)</title><rect x="47.6447%" y="948" width="0.1085%" height="15" fill="rgb(210,75,36)" fg:x="276323" fg:w="629"/><text x="47.8947%" y="958.50"></text></g><g><title>_jvp_jaxpr (jax\_src\interpreters\ad.py:1195) (627 samples, 0.11%)</title><rect x="47.6450%" y="964" width="0.1081%" height="15" fill="rgb(229,88,21)" fg:x="276325" fg:w="627"/><text x="47.8950%" y="974.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (627 samples, 0.11%)</title><rect x="47.6450%" y="980" width="0.1081%" height="15" fill="rgb(252,204,47)" fg:x="276325" fg:w="627"/><text x="47.8950%" y="990.50"></text></g><g><title>_true_bind (jax\_src\core.py:552) (605 samples, 0.10%)</title><rect x="47.7549%" y="1220" width="0.1043%" height="15" fill="rgb(208,77,27)" fg:x="276962" fg:w="605"/><text x="48.0049%" y="1230.50"></text></g><g><title>bind_with_trace (jax\_src\core.py:562) (603 samples, 0.10%)</title><rect x="47.7552%" y="1236" width="0.1040%" height="15" fill="rgb(221,76,26)" fg:x="276964" fg:w="603"/><text x="48.0052%" y="1246.50"></text></g><g><title>_trace_to_subjaxpr_nounits (jax\_src\interpreters\partial_eval.py:661) (612 samples, 0.11%)</title><rect x="47.7538%" y="1156" width="0.1055%" height="15" fill="rgb(225,139,18)" fg:x="276956" fg:w="612"/><text x="48.0038%" y="1166.50"></text></g><g><title>jaxpr_as_fun (jax\_src\core.py:296) (612 samples, 0.11%)</title><rect x="47.7538%" y="1172" width="0.1055%" height="15" fill="rgb(230,137,11)" fg:x="276956" fg:w="612"/><text x="48.0038%" y="1182.50"></text></g><g><title>eval_jaxpr (jax\_src\core.py:630) (610 samples, 0.11%)</title><rect x="47.7542%" y="1188" width="0.1052%" height="15" fill="rgb(212,28,1)" fg:x="276958" fg:w="610"/><text x="48.0042%" y="1198.50"></text></g><g><title>bind (jax\_src\core.py:536) (608 samples, 0.10%)</title><rect x="47.7545%" y="1204" width="0.1048%" height="15" fill="rgb(248,164,17)" fg:x="276960" fg:w="608"/><text x="48.0045%" y="1214.50"></text></g><g><title>fun (jax\_src\interpreters\partial_eval.py:1013) (616 samples, 0.11%)</title><rect x="47.7538%" y="1108" width="0.1062%" height="15" fill="rgb(222,171,42)" fg:x="276956" fg:w="616"/><text x="48.0038%" y="1118.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (616 samples, 0.11%)</title><rect x="47.7538%" y="1124" width="0.1062%" height="15" fill="rgb(243,84,45)" fg:x="276956" fg:w="616"/><text x="48.0038%" y="1134.50"></text></g><g><title>trace_to_subjaxpr_nounits_fwd (jax\_src\interpreters\partial_eval.py:690) (616 samples, 0.11%)</title><rect x="47.7538%" y="1140" width="0.1062%" height="15" fill="rgb(252,49,23)" fg:x="276956" fg:w="616"/><text x="48.0038%" y="1150.50"></text></g><g><title>trace_to_jaxpr_dynamic (jax\_src\interpreters\partial_eval.py:2292) (620 samples, 0.11%)</title><rect x="47.7538%" y="1076" width="0.1069%" height="15" fill="rgb(215,19,7)" fg:x="276956" fg:w="620"/><text x="48.0038%" y="1086.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (620 samples, 0.11%)</title><rect x="47.7538%" y="1092" width="0.1069%" height="15" fill="rgb(238,81,41)" fg:x="276956" fg:w="620"/><text x="48.0038%" y="1102.50"></text></g><g><title>_pjit_partial_eval (jax\_src\pjit.py:2362) (625 samples, 0.11%)</title><rect x="47.7533%" y="1012" width="0.1078%" height="15" fill="rgb(210,199,37)" fg:x="276953" fg:w="625"/><text x="48.0033%" y="1022.50"></text></g><g><title>partial_eval_jaxpr_nounits_fwd (jax\_src\interpreters\partial_eval.py:997) (625 samples, 0.11%)</title><rect x="47.7533%" y="1028" width="0.1078%" height="15" fill="rgb(244,192,49)" fg:x="276953" fg:w="625"/><text x="48.0033%" y="1038.50"></text></g><g><title>_partial_eval_jaxpr_nounits (jax\_src\interpreters\partial_eval.py:1030) (624 samples, 0.11%)</title><rect x="47.7535%" y="1044" width="0.1076%" height="15" fill="rgb(226,211,11)" fg:x="276954" fg:w="624"/><text x="48.0035%" y="1054.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (624 samples, 0.11%)</title><rect x="47.7535%" y="1060" width="0.1076%" height="15" fill="rgb(236,162,54)" fg:x="276954" fg:w="624"/><text x="48.0035%" y="1070.50"></text></g><g><title>process_primitive (jax\_src\interpreters\ad.py:500) (1,262 samples, 0.22%)</title><rect x="47.6447%" y="916" width="0.2176%" height="15" fill="rgb(220,229,9)" fg:x="276323" fg:w="1262"/><text x="47.8947%" y="926.50"></text></g><g><title>_pjit_jvp (jax\_src\pjit.py:2244) (633 samples, 0.11%)</title><rect x="47.7531%" y="932" width="0.1091%" height="15" fill="rgb(250,87,22)" fg:x="276952" fg:w="633"/><text x="48.0031%" y="942.50"></text></g><g><title>bind (jax\_src\core.py:536) (633 samples, 0.11%)</title><rect x="47.7531%" y="948" width="0.1091%" height="15" fill="rgb(239,43,17)" fg:x="276952" fg:w="633"/><text x="48.0031%" y="958.50"></text></g><g><title>_true_bind (jax\_src\core.py:552) (632 samples, 0.11%)</title><rect x="47.7533%" y="964" width="0.1090%" height="15" fill="rgb(231,177,25)" fg:x="276953" fg:w="632"/><text x="48.0033%" y="974.50"></text></g><g><title>bind_with_trace (jax\_src\core.py:562) (632 samples, 0.11%)</title><rect x="47.7533%" y="980" width="0.1090%" height="15" fill="rgb(219,179,1)" fg:x="276953" fg:w="632"/><text x="48.0033%" y="990.50"></text></g><g><title>process_primitive (jax\_src\interpreters\partial_eval.py:229) (632 samples, 0.11%)</title><rect x="47.7533%" y="996" width="0.1090%" height="15" fill="rgb(238,219,53)" fg:x="276953" fg:w="632"/><text x="48.0033%" y="1006.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:155) (1,263 samples, 0.22%)</title><rect x="47.6447%" y="852" width="0.2178%" height="15" fill="rgb(232,167,36)" fg:x="276323" fg:w="1263"/><text x="47.8947%" y="862.50"></text></g><g><title>bind (jax\_src\core.py:536) (1,263 samples, 0.22%)</title><rect x="47.6447%" y="868" width="0.2178%" height="15" fill="rgb(244,19,51)" fg:x="276323" fg:w="1263"/><text x="47.8947%" y="878.50"></text></g><g><title>_true_bind (jax\_src\core.py:552) (1,263 samples, 0.22%)</title><rect x="47.6447%" y="884" width="0.2178%" height="15" fill="rgb(224,6,22)" fg:x="276323" fg:w="1263"/><text x="47.8947%" y="894.50"></text></g><g><title>bind_with_trace (jax\_src\core.py:562) (1,263 samples, 0.22%)</title><rect x="47.6447%" y="900" width="0.2178%" height="15" fill="rgb(224,145,5)" fg:x="276323" fg:w="1263"/><text x="47.8947%" y="910.50"></text></g><g><title>_trace_to_subjaxpr_nounits (jax\_src\interpreters\partial_eval.py:661) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="708" width="0.2966%" height="15" fill="rgb(234,130,49)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="718.50"></text></g><g><title>flatten_fun (jax\_src\api_util.py:73) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="724" width="0.2966%" height="15" fill="rgb(254,6,2)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="734.50"></text></g><g><title>jvpfun (jax\_src\interpreters\ad.py:81) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="740" width="0.2966%" height="15" fill="rgb(208,96,46)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="750.50"></text></g><g><title>jvp_subtrace (jax\_src\interpreters\ad.py:136) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="756" width="0.2966%" height="15" fill="rgb(239,3,39)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="766.50"></text></g><g><title>flatten_fun_nokwargs (jax\_src\api_util.py:90) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="772" width="0.2966%" height="15" fill="rgb(233,210,1)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="782.50"></text></g><g><title>_get_result_paths_thunk (jax\_src\linear_util.py:396) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="788" width="0.2966%" height="15" fill="rgb(244,137,37)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="798.50"></text></g><g><title>fun (jaxbo\models\base_gpmodel.py:129) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="804" width="0.2966%" height="15" fill="rgb(240,136,2)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="814.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="820" width="0.2966%" height="15" fill="rgb(239,18,37)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="830.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (1,720 samples, 0.30%)</title><rect x="47.5661%" y="836" width="0.2966%" height="15" fill="rgb(218,185,22)" fg:x="275867" fg:w="1720"/><text x="47.8161%" y="846.50"></text></g><g><title>vjp (jax\_src\interpreters\ad.py:292) (1,723 samples, 0.30%)</title><rect x="47.5657%" y="612" width="0.2971%" height="15" fill="rgb(225,218,4)" fg:x="275865" fg:w="1723"/><text x="47.8157%" y="622.50"></text></g><g><title>linearize (jax\_src\interpreters\ad.py:277) (1,722 samples, 0.30%)</title><rect x="47.5659%" y="628" width="0.2969%" height="15" fill="rgb(230,182,32)" fg:x="275866" fg:w="1722"/><text x="47.8159%" y="638.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,722 samples, 0.30%)</title><rect x="47.5659%" y="644" width="0.2969%" height="15" fill="rgb(242,56,43)" fg:x="275866" fg:w="1722"/><text x="47.8159%" y="654.50"></text></g><g><title>trace_to_jaxpr_nounits (jax\_src\interpreters\partial_eval.py:614) (1,722 samples, 0.30%)</title><rect x="47.5659%" y="660" width="0.2969%" height="15" fill="rgb(233,99,24)" fg:x="275866" fg:w="1722"/><text x="47.8159%" y="670.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (1,722 samples, 0.30%)</title><rect x="47.5659%" y="676" width="0.2969%" height="15" fill="rgb(234,209,42)" fg:x="275866" fg:w="1722"/><text x="47.8159%" y="686.50"></text></g><g><title>trace_to_subjaxpr_nounits (jax\_src\interpreters\partial_eval.py:628) (1,722 samples, 0.30%)</title><rect x="47.5659%" y="692" width="0.2969%" height="15" fill="rgb(227,7,12)" fg:x="275866" fg:w="1722"/><text x="47.8159%" y="702.50"></text></g><g><title>_vjp (jax\_src\api.py:2179) (1,724 samples, 0.30%)</title><rect x="47.5657%" y="596" width="0.2973%" height="15" fill="rgb(245,203,43)" fg:x="275865" fg:w="1724"/><text x="47.8157%" y="606.50"></text></g><g><title>likelihood_value_and_grad (jaxbo\models\base_gpmodel.py:132) (1,725 samples, 0.30%)</title><rect x="47.5657%" y="548" width="0.2974%" height="15" fill="rgb(238,205,33)" fg:x="275865" fg:w="1725"/><text x="47.8157%" y="558.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (1,725 samples, 0.30%)</title><rect x="47.5657%" y="564" width="0.2974%" height="15" fill="rgb(231,56,7)" fg:x="275865" fg:w="1725"/><text x="47.8157%" y="574.50"></text></g><g><title>vjp (jax\_src\api.py:2171) (1,725 samples, 0.30%)</title><rect x="47.5657%" y="580" width="0.2974%" height="15" fill="rgb(244,186,29)" fg:x="275865" fg:w="1725"/><text x="47.8157%" y="590.50"></text></g><g><title>trace_to_jaxpr_dynamic (jax\_src\interpreters\partial_eval.py:2292) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="436" width="0.3443%" height="15" fill="rgb(234,111,31)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="446.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="452" width="0.3443%" height="15" fill="rgb(241,149,10)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="462.50"></text></g><g><title>_argnums_partial (jax\_src\api_util.py:288) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="468" width="0.3443%" height="15" fill="rgb(249,206,44)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="478.50"></text></g><g><title>flatten_fun (jax\_src\api_util.py:73) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="484" width="0.3443%" height="15" fill="rgb(251,153,30)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="494.50"></text></g><g><title>_argnames_partial (jax\_src\api_util.py:314) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="500" width="0.3443%" height="15" fill="rgb(239,152,38)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="510.50"></text></g><g><title>_argnums_partial (jax\_src\api_util.py:288) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="516" width="0.3443%" height="15" fill="rgb(249,139,47)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="526.50"></text></g><g><title>_get_result_paths_thunk (jax\_src\linear_util.py:396) (1,997 samples, 0.34%)</title><rect x="47.5657%" y="532" width="0.3443%" height="15" fill="rgb(244,64,35)" fg:x="275865" fg:w="1997"/><text x="47.8157%" y="542.50"></text></g><g><title>_create_pjit_jaxpr (jax\_src\pjit.py:1414) (2,000 samples, 0.34%)</title><rect x="47.5655%" y="404" width="0.3448%" height="15" fill="rgb(216,46,15)" fg:x="275864" fg:w="2000"/><text x="47.8155%" y="414.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (2,000 samples, 0.34%)</title><rect x="47.5655%" y="420" width="0.3448%" height="15" fill="rgb(250,74,19)" fg:x="275864" fg:w="2000"/><text x="47.8155%" y="430.50"></text></g><g><title>memoized_fun (jax\_src\linear_util.py:471) (2,001 samples, 0.35%)</title><rect x="47.5655%" y="388" width="0.3450%" height="15" fill="rgb(249,42,33)" fg:x="275864" fg:w="2001"/><text x="47.8155%" y="398.50"></text></g><g><title>_infer_params_impl (jax\_src\pjit.py:606) (2,002 samples, 0.35%)</title><rect x="47.5655%" y="372" width="0.3452%" height="15" fill="rgb(242,149,17)" fg:x="275864" fg:w="2002"/><text x="47.8155%" y="382.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:139) (2,006 samples, 0.35%)</title><rect x="47.5650%" y="324" width="0.3459%" height="15" fill="rgb(244,29,21)" fg:x="275861" fg:w="2006"/><text x="47.8150%" y="334.50"></text></g><g><title>_infer_params (jax\_src\pjit.py:686) (2,006 samples, 0.35%)</title><rect x="47.5650%" y="340" width="0.3459%" height="15" fill="rgb(220,130,37)" fg:x="275861" fg:w="2006"/><text x="47.8150%" y="350.50"></text></g><g><title>_infer_params_internal (jax\_src\pjit.py:710) (2,004 samples, 0.35%)</title><rect x="47.5654%" y="356" width="0.3455%" height="15" fill="rgb(211,67,2)" fg:x="275863" fg:w="2004"/><text x="47.8154%" y="366.50"></text></g><g><title>lower_per_platform (jax\_src\interpreters\mlir.py:2165) (597 samples, 0.10%)</title><rect x="47.9811%" y="580" width="0.1029%" height="15" fill="rgb(235,68,52)" fg:x="278274" fg:w="597"/><text x="48.2311%" y="590.50"></text></g><g><title>jaxpr_subcomp (jax\_src\interpreters\mlir.py:2043) (604 samples, 0.10%)</title><rect x="47.9802%" y="564" width="0.1041%" height="15" fill="rgb(246,142,3)" fg:x="278269" fg:w="604"/><text x="48.2302%" y="574.50"></text></g><g><title>lower_jaxpr_to_fun (jax\_src\interpreters\mlir.py:1771) (639 samples, 0.11%)</title><rect x="47.9745%" y="548" width="0.1102%" height="15" fill="rgb(241,25,7)" fg:x="278236" fg:w="639"/><text x="48.2245%" y="558.50"></text></g><g><title>_pjit_lowering (jax\_src\pjit.py:2124) (746 samples, 0.13%)</title><rect x="47.9566%" y="516" width="0.1286%" height="15" fill="rgb(242,119,39)" fg:x="278132" fg:w="746"/><text x="48.2066%" y="526.50"></text></g><g><title>_pjit_cached_lower_jaxpr_to_fun (jax\_src\pjit.py:2100) (663 samples, 0.11%)</title><rect x="47.9709%" y="532" width="0.1143%" height="15" fill="rgb(241,98,45)" fg:x="278215" fg:w="663"/><text x="48.2209%" y="542.50"></text></g><g><title>lower_per_platform (jax\_src\interpreters\mlir.py:2165) (751 samples, 0.13%)</title><rect x="47.9563%" y="500" width="0.1295%" height="15" fill="rgb(254,28,30)" fg:x="278130" fg:w="751"/><text x="48.2063%" y="510.50"></text></g><g><title>lower_jaxpr_to_module (jax\_src\interpreters\mlir.py:1274) (816 samples, 0.14%)</title><rect x="47.9452%" y="452" width="0.1407%" height="15" fill="rgb(241,142,54)" fg:x="278066" fg:w="816"/><text x="48.1952%" y="462.50"></text></g><g><title>lower_jaxpr_to_fun (jax\_src\interpreters\mlir.py:1771) (770 samples, 0.13%)</title><rect x="47.9532%" y="468" width="0.1328%" height="15" fill="rgb(222,85,15)" fg:x="278112" fg:w="770"/><text x="48.2032%" y="478.50"></text></g><g><title>jaxpr_subcomp (jax\_src\interpreters\mlir.py:2043) (753 samples, 0.13%)</title><rect x="47.9561%" y="484" width="0.1298%" height="15" fill="rgb(210,85,47)" fg:x="278129" fg:w="753"/><text x="48.2061%" y="494.50"></text></g><g><title>_cached_lowering_to_hlo (jax\_src\interpreters\pxla.py:1912) (924 samples, 0.16%)</title><rect x="47.9278%" y="436" width="0.1593%" height="15" fill="rgb(224,206,25)" fg:x="277965" fg:w="924"/><text x="48.1778%" y="446.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1846) (1,023 samples, 0.18%)</title><rect x="47.9109%" y="340" width="0.1764%" height="15" fill="rgb(243,201,19)" fg:x="277867" fg:w="1023"/><text x="48.1609%" y="350.50"></text></g><g><title>_resolve_and_lower (jax\_src\pjit.py:1813) (1,023 samples, 0.18%)</title><rect x="47.9109%" y="356" width="0.1764%" height="15" fill="rgb(236,59,4)" fg:x="277867" fg:w="1023"/><text x="48.1609%" y="366.50"></text></g><g><title>_pjit_lower (jax\_src\pjit.py:1931) (1,023 samples, 0.18%)</title><rect x="47.9109%" y="372" width="0.1764%" height="15" fill="rgb(254,179,45)" fg:x="277867" fg:w="1023"/><text x="48.1609%" y="382.50"></text></g><g><title>_pjit_lower_cached (jax\_src\pjit.py:1951) (1,023 samples, 0.18%)</title><rect x="47.9109%" y="388" width="0.1764%" height="15" fill="rgb(226,14,10)" fg:x="277867" fg:w="1023"/><text x="48.1609%" y="398.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,023 samples, 0.18%)</title><rect x="47.9109%" y="404" width="0.1764%" height="15" fill="rgb(244,27,41)" fg:x="277867" fg:w="1023"/><text x="48.1609%" y="414.50"></text></g><g><title>lower_sharding_computation (jax\_src\interpreters\pxla.py:2320) (925 samples, 0.16%)</title><rect x="47.9278%" y="420" width="0.1595%" height="15" fill="rgb(235,35,32)" fg:x="277965" fg:w="925"/><text x="48.1778%" y="430.50"></text></g><g><title>from_hlo (jax\_src\interpreters\pxla.py:2952) (2,643 samples, 0.46%)</title><rect x="48.0873%" y="372" width="0.4557%" height="15" fill="rgb(218,68,31)" fg:x="278890" fg:w="2643"/><text x="48.3373%" y="382.50"></text></g><g><title>_cached_compilation (jax\_src\interpreters\pxla.py:2743) (2,638 samples, 0.45%)</title><rect x="48.0882%" y="388" width="0.4549%" height="15" fill="rgb(207,120,37)" fg:x="278895" fg:w="2638"/><text x="48.3382%" y="398.50"></text></g><g><title>compile_or_get_cached (jax\_src\compiler.py:500) (2,602 samples, 0.45%)</title><rect x="48.0944%" y="404" width="0.4486%" height="15" fill="rgb(227,98,0)" fg:x="278931" fg:w="2602"/><text x="48.3444%" y="414.50"></text></g><g><title>_compile_and_write_cache (jax\_src\compiler.py:768) (2,602 samples, 0.45%)</title><rect x="48.0944%" y="420" width="0.4486%" height="15" fill="rgb(207,7,3)" fg:x="278931" fg:w="2602"/><text x="48.3444%" y="430.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (2,602 samples, 0.45%)</title><rect x="48.0944%" y="436" width="0.4486%" height="15" fill="rgb(206,98,19)" fg:x="278931" fg:w="2602"/><text x="48.3444%" y="446.50"></text></g><g><title>backend_compile_and_load (jax\_src\compiler.py:385) (2,588 samples, 0.45%)</title><rect x="48.0968%" y="452" width="0.4462%" height="15" fill="rgb(217,5,26)" fg:x="278945" fg:w="2588"/><text x="48.3468%" y="462.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1855) (2,645 samples, 0.46%)</title><rect x="48.0873%" y="340" width="0.4561%" height="15" fill="rgb(235,190,38)" fg:x="278890" fg:w="2645"/><text x="48.3373%" y="350.50"></text></g><g><title>compile (jax\_src\interpreters\pxla.py:2410) (2,645 samples, 0.46%)</title><rect x="48.0873%" y="356" width="0.4561%" height="15" fill="rgb(247,86,24)" fg:x="278890" fg:w="2645"/><text x="48.3373%" y="366.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (5,682 samples, 0.98%)</title><rect x="47.5650%" y="308" width="0.9797%" height="15" fill="rgb(205,101,16)" fg:x="275861" fg:w="5682"/><text x="47.8150%" y="318.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (3,676 samples, 0.63%)</title><rect x="47.9109%" y="324" width="0.6338%" height="15" fill="rgb(246,168,33)" fg:x="277867" fg:w="3676"/><text x="48.1609%" y="334.50"></text></g><g><title>objective (jaxbo\models\gp_model.py:55) (5,685 samples, 0.98%)</title><rect x="47.5647%" y="276" width="0.9802%" height="15" fill="rgb(231,114,1)" fg:x="275859" fg:w="5685"/><text x="47.8147%" y="286.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (5,683 samples, 0.98%)</title><rect x="47.5650%" y="292" width="0.9799%" height="15" fill="rgb(207,184,53)" fg:x="275861" fg:w="5683"/><text x="47.8150%" y="302.50"></text></g><g><title>_minimize_lbfgsb (scipy\optimize\_lbfgsb_py.py:386) (5,898 samples, 1.02%)</title><rect x="47.5643%" y="164" width="1.0170%" height="15" fill="rgb(224,95,51)" fg:x="275857" fg:w="5898"/><text x="47.8143%" y="174.50"></text></g><g><title>_prepare_scalar_function (scipy\optimize\_optimize.py:291) (5,898 samples, 1.02%)</title><rect x="47.5643%" y="180" width="1.0170%" height="15" fill="rgb(212,188,45)" fg:x="275857" fg:w="5898"/><text x="47.8143%" y="190.50"></text></g><g><title>__init__ (scipy\optimize\_differentiable_functions.py:223) (5,896 samples, 1.02%)</title><rect x="47.5647%" y="196" width="1.0166%" height="15" fill="rgb(223,154,38)" fg:x="275859" fg:w="5896"/><text x="47.8147%" y="206.50"></text></g><g><title>_update_fun (scipy\optimize\_differentiable_functions.py:295) (5,896 samples, 1.02%)</title><rect x="47.5647%" y="212" width="1.0166%" height="15" fill="rgb(251,22,52)" fg:x="275859" fg:w="5896"/><text x="47.8147%" y="222.50"></text></g><g><title>wrapped (scipy\optimize\_differentiable_functions.py:21) (5,896 samples, 1.02%)</title><rect x="47.5647%" y="228" width="1.0166%" height="15" fill="rgb(229,209,22)" fg:x="275859" fg:w="5896"/><text x="47.8147%" y="238.50"></text></g><g><title>__call__ (scipy\optimize\_optimize.py:80) (5,896 samples, 1.02%)</title><rect x="47.5647%" y="244" width="1.0166%" height="15" fill="rgb(234,138,34)" fg:x="275859" fg:w="5896"/><text x="47.8147%" y="254.50"></text></g><g><title>_compute_if_needed (scipy\optimize\_optimize.py:74) (5,896 samples, 1.02%)</title><rect x="47.5647%" y="260" width="1.0166%" height="15" fill="rgb(212,95,11)" fg:x="275859" fg:w="5896"/><text x="47.8147%" y="270.50"></text></g><g><title>__call__ (scipy\optimize\_optimize.py:80) (4,062 samples, 0.70%)</title><rect x="48.5878%" y="228" width="0.7004%" height="15" fill="rgb(240,179,47)" fg:x="281793" fg:w="4062"/><text x="48.8378%" y="238.50"></text></g><g><title>_compute_if_needed (scipy\optimize\_optimize.py:74) (4,059 samples, 0.70%)</title><rect x="48.5884%" y="244" width="0.6999%" height="15" fill="rgb(240,163,11)" fg:x="281796" fg:w="4059"/><text x="48.8384%" y="254.50"></text></g><g><title>objective (jaxbo\models\gp_model.py:56) (4,010 samples, 0.69%)</title><rect x="48.5968%" y="260" width="0.6914%" height="15" fill="rgb(236,37,12)" fg:x="281845" fg:w="4010"/><text x="48.8468%" y="270.50"></text></g><g><title>fun_and_grad (scipy\optimize\_differentiable_functions.py:344) (4,069 samples, 0.70%)</title><rect x="48.5872%" y="180" width="0.7016%" height="15" fill="rgb(232,164,16)" fg:x="281789" fg:w="4069"/><text x="48.8372%" y="190.50"></text></g><g><title>_update_fun (scipy\optimize\_differentiable_functions.py:295) (4,068 samples, 0.70%)</title><rect x="48.5873%" y="196" width="0.7014%" height="15" fill="rgb(244,205,15)" fg:x="281790" fg:w="4068"/><text x="48.8373%" y="206.50"></text></g><g><title>wrapped (scipy\optimize\_differentiable_functions.py:21) (4,067 samples, 0.70%)</title><rect x="48.5875%" y="212" width="0.7012%" height="15" fill="rgb(223,117,47)" fg:x="281791" fg:w="4067"/><text x="48.8375%" y="222.50"></text></g><g><title>train (jaxbo\models\gp_model.py:64) (10,008 samples, 1.73%)</title><rect x="47.5640%" y="116" width="1.7256%" height="15" fill="rgb(244,107,35)" fg:x="275855" fg:w="10008"/><text x="47.8140%" y="126.50"></text></g><g><title>minimize_lbfgs_grad (jaxbo\optimizers.py:148) (10,008 samples, 1.73%)</title><rect x="47.5640%" y="132" width="1.7256%" height="15" fill="rgb(205,140,8)" fg:x="275855" fg:w="10008"/><text x="47.8140%" y="142.50"></text></g><g><title>minimize (scipy\optimize\_minimize.py:740) (10,006 samples, 1.73%)</title><rect x="47.5643%" y="148" width="1.7253%" height="15" fill="rgb(228,84,46)" fg:x="275857" fg:w="10006"/><text x="47.8143%" y="158.50"></text></g><g><title>_minimize_lbfgsb (scipy\optimize\_lbfgsb_py.py:441) (4,086 samples, 0.70%)</title><rect x="48.5851%" y="164" width="0.7045%" height="15" fill="rgb(254,188,9)" fg:x="281777" fg:w="4086"/><text x="48.8351%" y="174.50"></text></g><g><title>bo_loop (src\bo_ecg.py:736) (10,083 samples, 1.74%)</title><rect x="47.5547%" y="100" width="1.7386%" height="15" fill="rgb(206,112,54)" fg:x="275801" fg:w="10083"/><text x="47.8047%" y="110.50"></text></g><g><title>_cached_lowering_to_hlo (jax\_src\interpreters\pxla.py:1912) (653 samples, 0.11%)</title><rect x="49.3425%" y="260" width="0.1126%" height="15" fill="rgb(216,84,49)" fg:x="286170" fg:w="653"/><text x="49.5925%" y="270.50"></text></g><g><title>_pjit_lower_cached (jax\_src\pjit.py:1951) (708 samples, 0.12%)</title><rect x="49.3332%" y="212" width="0.1221%" height="15" fill="rgb(214,194,35)" fg:x="286116" fg:w="708"/><text x="49.5832%" y="222.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (708 samples, 0.12%)</title><rect x="49.3332%" y="228" width="0.1221%" height="15" fill="rgb(249,28,3)" fg:x="286116" fg:w="708"/><text x="49.5832%" y="238.50"></text></g><g><title>lower_sharding_computation (jax\_src\interpreters\pxla.py:2320) (656 samples, 0.11%)</title><rect x="49.3422%" y="244" width="0.1131%" height="15" fill="rgb(222,56,52)" fg:x="286168" fg:w="656"/><text x="49.5922%" y="254.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1846) (712 samples, 0.12%)</title><rect x="49.3327%" y="164" width="0.1228%" height="15" fill="rgb(245,217,50)" fg:x="286113" fg:w="712"/><text x="49.5827%" y="174.50"></text></g><g><title>_resolve_and_lower (jax\_src\pjit.py:1813) (710 samples, 0.12%)</title><rect x="49.3331%" y="180" width="0.1224%" height="15" fill="rgb(213,201,24)" fg:x="286115" fg:w="710"/><text x="49.5831%" y="190.50"></text></g><g><title>_pjit_lower (jax\_src\pjit.py:1931) (709 samples, 0.12%)</title><rect x="49.3332%" y="196" width="0.1222%" height="15" fill="rgb(248,116,28)" fg:x="286116" fg:w="709"/><text x="49.5832%" y="206.50"></text></g><g><title>from_hlo (jax\_src\interpreters\pxla.py:2952) (1,453 samples, 0.25%)</title><rect x="49.4557%" y="196" width="0.2505%" height="15" fill="rgb(219,72,43)" fg:x="286826" fg:w="1453"/><text x="49.7057%" y="206.50"></text></g><g><title>_cached_compilation (jax\_src\interpreters\pxla.py:2743) (1,446 samples, 0.25%)</title><rect x="49.4569%" y="212" width="0.2493%" height="15" fill="rgb(209,138,14)" fg:x="286833" fg:w="1446"/><text x="49.7069%" y="222.50"></text></g><g><title>compile_or_get_cached (jax\_src\compiler.py:500) (1,425 samples, 0.25%)</title><rect x="49.4605%" y="228" width="0.2457%" height="15" fill="rgb(222,18,33)" fg:x="286854" fg:w="1425"/><text x="49.7105%" y="238.50"></text></g><g><title>_compile_and_write_cache (jax\_src\compiler.py:768) (1,425 samples, 0.25%)</title><rect x="49.4605%" y="244" width="0.2457%" height="15" fill="rgb(213,199,7)" fg:x="286854" fg:w="1425"/><text x="49.7105%" y="254.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,425 samples, 0.25%)</title><rect x="49.4605%" y="260" width="0.2457%" height="15" fill="rgb(250,110,10)" fg:x="286854" fg:w="1425"/><text x="49.7105%" y="270.50"></text></g><g><title>backend_compile_and_load (jax\_src\compiler.py:385) (1,411 samples, 0.24%)</title><rect x="49.4629%" y="276" width="0.2433%" height="15" fill="rgb(248,123,6)" fg:x="286868" fg:w="1411"/><text x="49.7129%" y="286.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1855) (1,460 samples, 0.25%)</title><rect x="49.4555%" y="164" width="0.2517%" height="15" fill="rgb(206,91,31)" fg:x="286825" fg:w="1460"/><text x="49.7055%" y="174.50"></text></g><g><title>compile (jax\_src\interpreters\pxla.py:2410) (1,460 samples, 0.25%)</title><rect x="49.4555%" y="180" width="0.2517%" height="15" fill="rgb(211,154,13)" fg:x="286825" fg:w="1460"/><text x="49.7055%" y="190.50"></text></g><g><title>bo_loop (src\bo_ecg.py:785) (2,402 samples, 0.41%)</title><rect x="49.2936%" y="100" width="0.4142%" height="15" fill="rgb(225,148,7)" fg:x="285886" fg:w="2402"/><text x="49.5436%" y="110.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (2,401 samples, 0.41%)</title><rect x="49.2938%" y="116" width="0.4140%" height="15" fill="rgb(220,160,43)" fg:x="285887" fg:w="2401"/><text x="49.5438%" y="126.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (2,401 samples, 0.41%)</title><rect x="49.2938%" y="132" width="0.4140%" height="15" fill="rgb(213,52,39)" fg:x="285887" fg:w="2401"/><text x="49.5438%" y="142.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (2,175 samples, 0.38%)</title><rect x="49.3327%" y="148" width="0.3750%" height="15" fill="rgb(243,137,7)" fg:x="286113" fg:w="2175"/><text x="49.5827%" y="158.50"></text></g><g><title>deferring_binary_op (jax\_src\numpy\array_methods.py:583) (1,010 samples, 0.17%)</title><rect x="49.7077%" y="116" width="0.1741%" height="15" fill="rgb(230,79,13)" fg:x="288288" fg:w="1010"/><text x="49.9577%" y="126.50"></text></g><g><title>bo_loop (src\bo_ecg.py:786) (1,604 samples, 0.28%)</title><rect x="49.7077%" y="100" width="0.2766%" height="15" fill="rgb(247,105,23)" fg:x="288288" fg:w="1604"/><text x="49.9577%" y="110.50"></text></g><g><title>mean (jax\_src\numpy\reductions.py:864) (594 samples, 0.10%)</title><rect x="49.8819%" y="116" width="0.1024%" height="15" fill="rgb(223,179,41)" fg:x="289298" fg:w="594"/><text x="50.1319%" y="126.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (594 samples, 0.10%)</title><rect x="49.8819%" y="132" width="0.1024%" height="15" fill="rgb(218,9,34)" fg:x="289298" fg:w="594"/><text x="50.1319%" y="142.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (594 samples, 0.10%)</title><rect x="49.8819%" y="148" width="0.1024%" height="15" fill="rgb(222,106,8)" fg:x="289298" fg:w="594"/><text x="50.1319%" y="158.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (580 samples, 0.10%)</title><rect x="49.8843%" y="164" width="0.1000%" height="15" fill="rgb(211,220,0)" fg:x="289312" fg:w="580"/><text x="50.1343%" y="174.50"></text></g><g><title>_trace_to_subjaxpr_nounits (jax\_src\interpreters\partial_eval.py:661) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="708" width="0.2029%" height="15" fill="rgb(229,52,16)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="718.50"></text></g><g><title>flatten_fun (jax\_src\api_util.py:73) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="724" width="0.2029%" height="15" fill="rgb(212,155,18)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="734.50"></text></g><g><title>jvpfun (jax\_src\interpreters\ad.py:81) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="740" width="0.2029%" height="15" fill="rgb(242,21,14)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="750.50"></text></g><g><title>jvp_subtrace (jax\_src\interpreters\ad.py:136) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="756" width="0.2029%" height="15" fill="rgb(222,19,48)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="766.50"></text></g><g><title>flatten_fun_nokwargs (jax\_src\api_util.py:90) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="772" width="0.2029%" height="15" fill="rgb(232,45,27)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="782.50"></text></g><g><title>_get_result_paths_thunk (jax\_src\linear_util.py:396) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="788" width="0.2029%" height="15" fill="rgb(249,103,42)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="798.50"></text></g><g><title>acquisition_fn (jaxbo\models\base_gpmodel.py:343) (1,177 samples, 0.20%)</title><rect x="50.0074%" y="804" width="0.2029%" height="15" fill="rgb(246,81,33)" fg:x="290026" fg:w="1177"/><text x="50.2574%" y="814.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (1,176 samples, 0.20%)</title><rect x="50.0076%" y="820" width="0.2028%" height="15" fill="rgb(252,33,42)" fg:x="290027" fg:w="1176"/><text x="50.2576%" y="830.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (1,176 samples, 0.20%)</title><rect x="50.0076%" y="836" width="0.2028%" height="15" fill="rgb(209,212,41)" fg:x="290027" fg:w="1176"/><text x="50.2576%" y="846.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:155) (888 samples, 0.15%)</title><rect x="50.0572%" y="852" width="0.1531%" height="15" fill="rgb(207,154,6)" fg:x="290315" fg:w="888"/><text x="50.3072%" y="862.50"></text></g><g><title>bind (jax\_src\core.py:536) (888 samples, 0.15%)</title><rect x="50.0572%" y="868" width="0.1531%" height="15" fill="rgb(223,64,47)" fg:x="290315" fg:w="888"/><text x="50.3072%" y="878.50"></text></g><g><title>_true_bind (jax\_src\core.py:552) (888 samples, 0.15%)</title><rect x="50.0572%" y="884" width="0.1531%" height="15" fill="rgb(211,161,38)" fg:x="290315" fg:w="888"/><text x="50.3072%" y="894.50"></text></g><g><title>bind_with_trace (jax\_src\core.py:562) (888 samples, 0.15%)</title><rect x="50.0572%" y="900" width="0.1531%" height="15" fill="rgb(219,138,40)" fg:x="290315" fg:w="888"/><text x="50.3072%" y="910.50"></text></g><g><title>process_primitive (jax\_src\interpreters\ad.py:500) (885 samples, 0.15%)</title><rect x="50.0578%" y="916" width="0.1526%" height="15" fill="rgb(241,228,46)" fg:x="290318" fg:w="885"/><text x="50.3078%" y="926.50"></text></g><g><title>linearize (jax\_src\interpreters\ad.py:277) (1,184 samples, 0.20%)</title><rect x="50.0071%" y="628" width="0.2041%" height="15" fill="rgb(223,209,38)" fg:x="290024" fg:w="1184"/><text x="50.2571%" y="638.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,184 samples, 0.20%)</title><rect x="50.0071%" y="644" width="0.2041%" height="15" fill="rgb(236,164,45)" fg:x="290024" fg:w="1184"/><text x="50.2571%" y="654.50"></text></g><g><title>trace_to_jaxpr_nounits (jax\_src\interpreters\partial_eval.py:614) (1,183 samples, 0.20%)</title><rect x="50.0072%" y="660" width="0.2040%" height="15" fill="rgb(231,15,5)" fg:x="290025" fg:w="1183"/><text x="50.2572%" y="670.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (1,183 samples, 0.20%)</title><rect x="50.0072%" y="676" width="0.2040%" height="15" fill="rgb(252,35,15)" fg:x="290025" fg:w="1183"/><text x="50.2572%" y="686.50"></text></g><g><title>trace_to_subjaxpr_nounits (jax\_src\interpreters\partial_eval.py:628) (1,183 samples, 0.20%)</title><rect x="50.0072%" y="692" width="0.2040%" height="15" fill="rgb(248,181,18)" fg:x="290025" fg:w="1183"/><text x="50.2572%" y="702.50"></text></g><g><title>acq_value_and_grad (jaxbo\models\base_gpmodel.py:346) (1,186 samples, 0.20%)</title><rect x="50.0069%" y="548" width="0.2045%" height="15" fill="rgb(233,39,42)" fg:x="290023" fg:w="1186"/><text x="50.2569%" y="558.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (1,186 samples, 0.20%)</title><rect x="50.0069%" y="564" width="0.2045%" height="15" fill="rgb(238,110,33)" fg:x="290023" fg:w="1186"/><text x="50.2569%" y="574.50"></text></g><g><title>vjp (jax\_src\api.py:2171) (1,185 samples, 0.20%)</title><rect x="50.0071%" y="580" width="0.2043%" height="15" fill="rgb(233,195,10)" fg:x="290024" fg:w="1185"/><text x="50.2571%" y="590.50"></text></g><g><title>_vjp (jax\_src\api.py:2179) (1,185 samples, 0.20%)</title><rect x="50.0071%" y="596" width="0.2043%" height="15" fill="rgb(254,105,3)" fg:x="290024" fg:w="1185"/><text x="50.2571%" y="606.50"></text></g><g><title>vjp (jax\_src\interpreters\ad.py:292) (1,185 samples, 0.20%)</title><rect x="50.0071%" y="612" width="0.2043%" height="15" fill="rgb(221,225,9)" fg:x="290024" fg:w="1185"/><text x="50.2571%" y="622.50"></text></g><g><title>trace_to_jaxpr_dynamic (jax\_src\interpreters\partial_eval.py:2292) (1,413 samples, 0.24%)</title><rect x="50.0067%" y="436" width="0.2436%" height="15" fill="rgb(224,227,45)" fg:x="290022" fg:w="1413"/><text x="50.2567%" y="446.50"></text></g><g><title>call_wrapped (jax\_src\linear_util.py:211) (1,413 samples, 0.24%)</title><rect x="50.0067%" y="452" width="0.2436%" height="15" fill="rgb(229,198,43)" fg:x="290022" fg:w="1413"/><text x="50.2567%" y="462.50"></text></g><g><title>_argnums_partial (jax\_src\api_util.py:288) (1,413 samples, 0.24%)</title><rect x="50.0067%" y="468" width="0.2436%" height="15" fill="rgb(206,209,35)" fg:x="290022" fg:w="1413"/><text x="50.2567%" y="478.50"></text></g><g><title>flatten_fun (jax\_src\api_util.py:73) (1,413 samples, 0.24%)</title><rect x="50.0067%" y="484" width="0.2436%" height="15" fill="rgb(245,195,53)" fg:x="290022" fg:w="1413"/><text x="50.2567%" y="494.50"></text></g><g><title>_argnames_partial (jax\_src\api_util.py:314) (1,412 samples, 0.24%)</title><rect x="50.0069%" y="500" width="0.2435%" height="15" fill="rgb(240,92,26)" fg:x="290023" fg:w="1412"/><text x="50.2569%" y="510.50"></text></g><g><title>_argnums_partial (jax\_src\api_util.py:288) (1,412 samples, 0.24%)</title><rect x="50.0069%" y="516" width="0.2435%" height="15" fill="rgb(207,40,23)" fg:x="290023" fg:w="1412"/><text x="50.2569%" y="526.50"></text></g><g><title>_get_result_paths_thunk (jax\_src\linear_util.py:396) (1,412 samples, 0.24%)</title><rect x="50.0069%" y="532" width="0.2435%" height="15" fill="rgb(223,111,35)" fg:x="290023" fg:w="1412"/><text x="50.2569%" y="542.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:139) (1,417 samples, 0.24%)</title><rect x="50.0062%" y="324" width="0.2443%" height="15" fill="rgb(229,147,28)" fg:x="290019" fg:w="1417"/><text x="50.2562%" y="334.50"></text></g><g><title>_infer_params (jax\_src\pjit.py:686) (1,417 samples, 0.24%)</title><rect x="50.0062%" y="340" width="0.2443%" height="15" fill="rgb(211,29,28)" fg:x="290019" fg:w="1417"/><text x="50.2562%" y="350.50"></text></g><g><title>_infer_params_internal (jax\_src\pjit.py:710) (1,416 samples, 0.24%)</title><rect x="50.0064%" y="356" width="0.2442%" height="15" fill="rgb(228,72,33)" fg:x="290020" fg:w="1416"/><text x="50.2564%" y="366.50"></text></g><g><title>_infer_params_impl (jax\_src\pjit.py:606) (1,416 samples, 0.24%)</title><rect x="50.0064%" y="372" width="0.2442%" height="15" fill="rgb(205,214,31)" fg:x="290020" fg:w="1416"/><text x="50.2564%" y="382.50"></text></g><g><title>memoized_fun (jax\_src\linear_util.py:471) (1,416 samples, 0.24%)</title><rect x="50.0064%" y="388" width="0.2442%" height="15" fill="rgb(224,111,15)" fg:x="290020" fg:w="1416"/><text x="50.2564%" y="398.50"></text></g><g><title>_create_pjit_jaxpr (jax\_src\pjit.py:1414) (1,416 samples, 0.24%)</title><rect x="50.0064%" y="404" width="0.2442%" height="15" fill="rgb(253,21,26)" fg:x="290020" fg:w="1416"/><text x="50.2564%" y="414.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,416 samples, 0.24%)</title><rect x="50.0064%" y="420" width="0.2442%" height="15" fill="rgb(245,139,43)" fg:x="290020" fg:w="1416"/><text x="50.2564%" y="430.50"></text></g><g><title>lower_per_platform (jax\_src\interpreters\mlir.py:2165) (682 samples, 0.12%)</title><rect x="50.3498%" y="660" width="0.1176%" height="15" fill="rgb(252,170,7)" fg:x="292012" fg:w="682"/><text x="50.5998%" y="670.50"></text></g><g><title>jaxpr_subcomp (jax\_src\interpreters\mlir.py:2043) (710 samples, 0.12%)</title><rect x="50.3469%" y="644" width="0.1224%" height="15" fill="rgb(231,118,14)" fg:x="291995" fg:w="710"/><text x="50.5969%" y="654.50"></text></g><g><title>lower_jaxpr_to_fun (jax\_src\interpreters\mlir.py:1771) (915 samples, 0.16%)</title><rect x="50.3136%" y="628" width="0.1578%" height="15" fill="rgb(238,83,0)" fg:x="291802" fg:w="915"/><text x="50.5636%" y="638.50"></text></g><g><title>_pjit_cached_lower_jaxpr_to_fun (jax\_src\pjit.py:2100) (953 samples, 0.16%)</title><rect x="50.3074%" y="612" width="0.1643%" height="15" fill="rgb(221,39,39)" fg:x="291766" fg:w="953"/><text x="50.5574%" y="622.50"></text></g><g><title>_pjit_lowering (jax\_src\pjit.py:2124) (955 samples, 0.16%)</title><rect x="50.3074%" y="596" width="0.1647%" height="15" fill="rgb(222,119,46)" fg:x="291766" fg:w="955"/><text x="50.5574%" y="606.50"></text></g><g><title>_pjit_lowering (jax\_src\pjit.py:2124) (1,035 samples, 0.18%)</title><rect x="50.2954%" y="516" width="0.1785%" height="15" fill="rgb(222,165,49)" fg:x="291696" fg:w="1035"/><text x="50.5454%" y="526.50"></text></g><g><title>_pjit_cached_lower_jaxpr_to_fun (jax\_src\pjit.py:2100) (1,033 samples, 0.18%)</title><rect x="50.2957%" y="532" width="0.1781%" height="15" fill="rgb(219,113,52)" fg:x="291698" fg:w="1033"/><text x="50.5457%" y="542.50"></text></g><g><title>lower_jaxpr_to_fun (jax\_src\interpreters\mlir.py:1771) (1,002 samples, 0.17%)</title><rect x="50.3011%" y="548" width="0.1728%" height="15" fill="rgb(214,7,15)" fg:x="291729" fg:w="1002"/><text x="50.5511%" y="558.50"></text></g><g><title>jaxpr_subcomp (jax\_src\interpreters\mlir.py:2043) (985 samples, 0.17%)</title><rect x="50.3040%" y="564" width="0.1698%" height="15" fill="rgb(235,32,4)" fg:x="291746" fg:w="985"/><text x="50.5540%" y="574.50"></text></g><g><title>lower_per_platform (jax\_src\interpreters\mlir.py:2165) (985 samples, 0.17%)</title><rect x="50.3040%" y="580" width="0.1698%" height="15" fill="rgb(238,90,54)" fg:x="291746" fg:w="985"/><text x="50.5540%" y="590.50"></text></g><g><title>lower_per_platform (jax\_src\interpreters\mlir.py:2165) (1,041 samples, 0.18%)</title><rect x="50.2947%" y="500" width="0.1795%" height="15" fill="rgb(213,208,19)" fg:x="291692" fg:w="1041"/><text x="50.5447%" y="510.50"></text></g><g><title>lower_jaxpr_to_module (jax\_src\interpreters\mlir.py:1274) (1,110 samples, 0.19%)</title><rect x="50.2829%" y="452" width="0.1914%" height="15" fill="rgb(233,156,4)" fg:x="291624" fg:w="1110"/><text x="50.5329%" y="462.50"></text></g><g><title>lower_jaxpr_to_fun (jax\_src\interpreters\mlir.py:1771) (1,064 samples, 0.18%)</title><rect x="50.2909%" y="468" width="0.1835%" height="15" fill="rgb(207,194,5)" fg:x="291670" fg:w="1064"/><text x="50.5409%" y="478.50"></text></g><g><title>jaxpr_subcomp (jax\_src\interpreters\mlir.py:2043) (1,042 samples, 0.18%)</title><rect x="50.2947%" y="484" width="0.1797%" height="15" fill="rgb(206,111,30)" fg:x="291692" fg:w="1042"/><text x="50.5447%" y="494.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1846) (1,308 samples, 0.23%)</title><rect x="50.2509%" y="340" width="0.2255%" height="15" fill="rgb(243,70,54)" fg:x="291438" fg:w="1308"/><text x="50.5009%" y="350.50"></text></g><g><title>_resolve_and_lower (jax\_src\pjit.py:1813) (1,308 samples, 0.23%)</title><rect x="50.2509%" y="356" width="0.2255%" height="15" fill="rgb(242,28,8)" fg:x="291438" fg:w="1308"/><text x="50.5009%" y="366.50"></text></g><g><title>_pjit_lower (jax\_src\pjit.py:1931) (1,308 samples, 0.23%)</title><rect x="50.2509%" y="372" width="0.2255%" height="15" fill="rgb(219,106,18)" fg:x="291438" fg:w="1308"/><text x="50.5009%" y="382.50"></text></g><g><title>_pjit_lower_cached (jax\_src\pjit.py:1951) (1,307 samples, 0.23%)</title><rect x="50.2510%" y="388" width="0.2254%" height="15" fill="rgb(244,222,10)" fg:x="291439" fg:w="1307"/><text x="50.5010%" y="398.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (1,306 samples, 0.23%)</title><rect x="50.2512%" y="404" width="0.2252%" height="15" fill="rgb(236,179,52)" fg:x="291440" fg:w="1306"/><text x="50.5012%" y="414.50"></text></g><g><title>lower_sharding_computation (jax\_src\interpreters\pxla.py:2320) (1,244 samples, 0.21%)</title><rect x="50.2619%" y="420" width="0.2145%" height="15" fill="rgb(213,23,39)" fg:x="291502" fg:w="1244"/><text x="50.5119%" y="430.50"></text></g><g><title>_cached_lowering_to_hlo (jax\_src\interpreters\pxla.py:1912) (1,241 samples, 0.21%)</title><rect x="50.2624%" y="436" width="0.2140%" height="15" fill="rgb(238,48,10)" fg:x="291505" fg:w="1241"/><text x="50.5124%" y="446.50"></text></g><g><title>from_hlo (jax\_src\interpreters\pxla.py:2952) (3,250 samples, 0.56%)</title><rect x="50.4764%" y="372" width="0.5604%" height="15" fill="rgb(251,196,23)" fg:x="292746" fg:w="3250"/><text x="50.7264%" y="382.50"></text></g><g><title>_cached_compilation (jax\_src\interpreters\pxla.py:2743) (3,240 samples, 0.56%)</title><rect x="50.4781%" y="388" width="0.5587%" height="15" fill="rgb(250,152,24)" fg:x="292756" fg:w="3240"/><text x="50.7281%" y="398.50"></text></g><g><title>compile_or_get_cached (jax\_src\compiler.py:500) (3,204 samples, 0.55%)</title><rect x="50.4843%" y="404" width="0.5524%" height="15" fill="rgb(209,150,17)" fg:x="292792" fg:w="3204"/><text x="50.7343%" y="414.50"></text></g><g><title>_compile_and_write_cache (jax\_src\compiler.py:768) (3,204 samples, 0.55%)</title><rect x="50.4843%" y="420" width="0.5524%" height="15" fill="rgb(234,202,34)" fg:x="292792" fg:w="3204"/><text x="50.7343%" y="430.50"></text></g><g><title>wrapper (jax\_src\profiler.py:354) (3,204 samples, 0.55%)</title><rect x="50.4843%" y="436" width="0.5524%" height="15" fill="rgb(253,148,53)" fg:x="292792" fg:w="3204"/><text x="50.7343%" y="446.50"></text></g><g><title>backend_compile_and_load (jax\_src\compiler.py:385) (3,188 samples, 0.55%)</title><rect x="50.4871%" y="452" width="0.5497%" height="15" fill="rgb(218,129,16)" fg:x="292808" fg:w="3188"/><text x="50.7371%" y="462.50"></text></g><g><title>_pjit_call_impl_python (jax\_src\pjit.py:1855) (3,252 samples, 0.56%)</title><rect x="50.4764%" y="340" width="0.5607%" height="15" fill="rgb(216,85,19)" fg:x="292746" fg:w="3252"/><text x="50.7264%" y="350.50"></text></g><g><title>compile (jax\_src\interpreters\pxla.py:2410) (3,252 samples, 0.56%)</title><rect x="50.4764%" y="356" width="0.5607%" height="15" fill="rgb(235,228,7)" fg:x="292746" fg:w="3252"/><text x="50.7264%" y="366.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (5,985 samples, 1.03%)</title><rect x="50.0062%" y="308" width="1.0320%" height="15" fill="rgb(245,175,0)" fg:x="290019" fg:w="5985"/><text x="50.2562%" y="318.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (4,566 samples, 0.79%)</title><rect x="50.2509%" y="324" width="0.7873%" height="15" fill="rgb(208,168,36)" fg:x="291438" fg:w="4566"/><text x="50.5009%" y="334.50"></text></g><g><title>objective (jaxbo\models\base_gpmodel.py:377) (6,002 samples, 1.03%)</title><rect x="50.0036%" y="276" width="1.0349%" height="15" fill="rgb(246,171,24)" fg:x="290004" fg:w="6002"/><text x="50.2536%" y="286.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (5,987 samples, 1.03%)</title><rect x="50.0062%" y="292" width="1.0323%" height="15" fill="rgb(215,142,24)" fg:x="290019" fg:w="5987"/><text x="50.2562%" y="302.50"></text></g><g><title>wrapped (scipy\optimize\_differentiable_functions.py:21) (6,954 samples, 1.20%)</title><rect x="50.0031%" y="228" width="1.1990%" height="15" fill="rgb(250,187,7)" fg:x="290001" fg:w="6954"/><text x="50.2531%" y="238.50"></text></g><g><title>__call__ (scipy\optimize\_optimize.py:80) (6,953 samples, 1.20%)</title><rect x="50.0033%" y="244" width="1.1989%" height="15" fill="rgb(228,66,33)" fg:x="290002" fg:w="6953"/><text x="50.2533%" y="254.50"></text></g><g><title>_compute_if_needed (scipy\optimize\_optimize.py:74) (6,952 samples, 1.20%)</title><rect x="50.0034%" y="260" width="1.1987%" height="15" fill="rgb(234,215,21)" fg:x="290003" fg:w="6952"/><text x="50.2534%" y="270.50"></text></g><g><title>objective (jaxbo\models\base_gpmodel.py:378) (949 samples, 0.16%)</title><rect x="51.0385%" y="276" width="0.1636%" height="15" fill="rgb(222,191,20)" fg:x="296006" fg:w="949"/><text x="51.2885%" y="286.50"></text></g><g><title>__init__ (scipy\optimize\_differentiable_functions.py:223) (6,958 samples, 1.20%)</title><rect x="50.0031%" y="196" width="1.1997%" height="15" fill="rgb(245,79,54)" fg:x="290001" fg:w="6958"/><text x="50.2531%" y="206.50"></text></g><g><title>_update_fun (scipy\optimize\_differentiable_functions.py:295) (6,958 samples, 1.20%)</title><rect x="50.0031%" y="212" width="1.1997%" height="15" fill="rgb(240,10,37)" fg:x="290001" fg:w="6958"/><text x="50.2531%" y="222.50"></text></g><g><title>_minimize_lbfgsb (scipy\optimize\_lbfgsb_py.py:386) (6,983 samples, 1.20%)</title><rect x="50.0010%" y="164" width="1.2040%" height="15" fill="rgb(214,192,32)" fg:x="289989" fg:w="6983"/><text x="50.2510%" y="174.50"></text></g><g><title>_prepare_scalar_function (scipy\optimize\_optimize.py:291) (6,982 samples, 1.20%)</title><rect x="50.0012%" y="180" width="1.2039%" height="15" fill="rgb(209,36,54)" fg:x="289990" fg:w="6982"/><text x="50.2512%" y="190.50"></text></g><g><title>_compute_if_needed (scipy\optimize\_optimize.py:74) (21,766 samples, 3.75%)</title><rect x="51.2865%" y="244" width="3.7530%" height="15" fill="rgb(220,10,11)" fg:x="297444" fg:w="21766"/><text x="51.5365%" y="254.50">_com..</text></g><g><title>objective (jaxbo\models\base_gpmodel.py:378) (21,334 samples, 3.68%)</title><rect x="51.3609%" y="260" width="3.6785%" height="15" fill="rgb(221,106,17)" fg:x="297876" fg:w="21334"/><text x="51.6109%" y="270.50">obje..</text></g><g><title>__call__ (scipy\optimize\_optimize.py:80) (21,803 samples, 3.76%)</title><rect x="51.2809%" y="228" width="3.7594%" height="15" fill="rgb(251,142,44)" fg:x="297412" fg:w="21803"/><text x="51.5309%" y="238.50">__ca..</text></g><g><title>wrapped (scipy\optimize\_differentiable_functions.py:21) (21,815 samples, 3.76%)</title><rect x="51.2797%" y="212" width="3.7614%" height="15" fill="rgb(238,13,15)" fg:x="297405" fg:w="21815"/><text x="51.5297%" y="222.50">wrap..</text></g><g><title>_update_fun (scipy\optimize\_differentiable_functions.py:295) (21,853 samples, 3.77%)</title><rect x="51.2794%" y="196" width="3.7680%" height="15" fill="rgb(208,107,27)" fg:x="297403" fg:w="21853"/><text x="51.5294%" y="206.50">_upd..</text></g><g><title>fun_and_grad (scipy\optimize\_differentiable_functions.py:344) (21,862 samples, 3.77%)</title><rect x="51.2787%" y="180" width="3.7695%" height="15" fill="rgb(205,136,37)" fg:x="297399" fg:w="21862"/><text x="51.5287%" y="190.50">fun_..</text></g><g><title>_minimize_lbfgsb (scipy\optimize\_lbfgsb_py.py:441) (22,166 samples, 3.82%)</title><rect x="51.2540%" y="164" width="3.8219%" height="15" fill="rgb(250,205,27)" fg:x="297256" fg:w="22166"/><text x="51.5040%" y="174.50">_min..</text></g><g><title>compute_next_point_lbfgs (jaxbo\models\base_gpmodel.py:397) (29,514 samples, 5.09%)</title><rect x="49.9905%" y="116" width="5.0889%" height="15" fill="rgb(210,80,43)" fg:x="289928" fg:w="29514"/><text x="50.2405%" y="126.50">comput..</text></g><g><title>minimize_lbfgs_grad (jaxbo\optimizers.py:148) (29,514 samples, 5.09%)</title><rect x="49.9905%" y="132" width="5.0889%" height="15" fill="rgb(247,160,36)" fg:x="289928" fg:w="29514"/><text x="50.2405%" y="142.50">minimi..</text></g><g><title>minimize (scipy\optimize\_minimize.py:740) (29,459 samples, 5.08%)</title><rect x="50.0000%" y="148" width="5.0794%" height="15" fill="rgb(234,13,49)" fg:x="289983" fg:w="29459"/><text x="50.2500%" y="158.50">minimi..</text></g><g><title>bo_loop (src\bo_ecg.py:791) (29,629 samples, 5.11%)</title><rect x="49.9850%" y="100" width="5.1087%" height="15" fill="rgb(234,122,0)" fg:x="289896" fg:w="29629"/><text x="50.2350%" y="110.50">bo_loo..</text></g><g><title>_collision_check (purkinje_uv\fractal_tree_uv.py:250) (8,263 samples, 1.42%)</title><rect x="55.2577%" y="196" width="1.4247%" height="15" fill="rgb(207,146,38)" fg:x="320476" fg:w="8263"/><text x="55.5077%" y="206.50"></text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:454) (8,596 samples, 1.48%)</title><rect x="55.2543%" y="180" width="1.4822%" height="15" fill="rgb(207,177,25)" fg:x="320456" fg:w="8596"/><text x="55.5043%" y="190.50"></text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:520) (10,413 samples, 1.80%)</title><rect x="55.1086%" y="164" width="1.7955%" height="15" fill="rgb(211,178,42)" fg:x="319611" fg:w="10413"/><text x="55.3586%" y="174.50">g..</text></g><g><title>project_new_point (purkinje_uv\mesh.py:196) (959 samples, 0.17%)</title><rect x="56.9399%" y="196" width="0.1654%" height="15" fill="rgb(230,69,54)" fg:x="330232" fg:w="959"/><text x="57.1899%" y="206.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (583 samples, 0.10%)</title><rect x="57.5070%" y="228" width="0.1005%" height="15" fill="rgb(214,135,41)" fg:x="333521" fg:w="583"/><text x="57.7570%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:264) (3,319 samples, 0.57%)</title><rect x="57.4732%" y="212" width="0.5723%" height="15" fill="rgb(237,67,25)" fg:x="333325" fg:w="3319"/><text x="57.7232%" y="222.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:265) (2,986 samples, 0.51%)</title><rect x="58.0455%" y="212" width="0.5149%" height="15" fill="rgb(222,189,50)" fg:x="336644" fg:w="2986"/><text x="58.2955%" y="222.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:266) (2,940 samples, 0.51%)</title><rect x="58.5603%" y="212" width="0.5069%" height="15" fill="rgb(245,148,34)" fg:x="339630" fg:w="2940"/><text x="58.8103%" y="222.50"></text></g><g><title>project_new_point (purkinje_uv\mesh.py:199) (12,457 samples, 2.15%)</title><rect x="57.1075%" y="196" width="2.1479%" height="15" fill="rgb(222,29,6)" fg:x="331204" fg:w="12457"/><text x="57.3575%" y="206.50">p..</text></g><g><title>_eval_field (purkinje_uv\fractal_tree_uv.py:117) (13,473 samples, 2.32%)</title><rect x="56.9345%" y="180" width="2.3231%" height="15" fill="rgb(221,189,43)" fg:x="330201" fg:w="13473"/><text x="57.1845%" y="190.50">_..</text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:546) (13,766 samples, 2.37%)</title><rect x="56.9313%" y="164" width="2.3736%" height="15" fill="rgb(207,36,27)" fg:x="330182" fg:w="13766"/><text x="57.1813%" y="174.50">gr..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:374) (24,400 samples, 4.21%)</title><rect x="55.0993%" y="148" width="4.2071%" height="15" fill="rgb(217,90,24)" fg:x="319557" fg:w="24400"/><text x="55.3493%" y="158.50">run_E..</text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:453) (960 samples, 0.17%)</title><rect x="59.4619%" y="180" width="0.1655%" height="15" fill="rgb(224,66,35)" fg:x="344859" fg:w="960"/><text x="59.7119%" y="190.50"></text></g><g><title>_collision_check (purkinje_uv\fractal_tree_uv.py:250) (31,271 samples, 5.39%)</title><rect x="59.6406%" y="196" width="5.3919%" height="15" fill="rgb(221,13,50)" fg:x="345895" fg:w="31271"/><text x="59.8906%" y="206.50">_collis..</text></g><g><title>norm (numpy\linalg\_linalg.py:2836) (2,175 samples, 0.38%)</title><rect x="64.6574%" y="212" width="0.3750%" height="15" fill="rgb(236,68,49)" fg:x="374991" fg:w="2175"/><text x="64.9074%" y="222.50"></text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:454) (32,140 samples, 5.54%)</title><rect x="59.6275%" y="180" width="5.5417%" height="15" fill="rgb(229,146,28)" fg:x="345819" fg:w="32140"/><text x="59.8775%" y="190.50">_grow_g..</text></g><g><title>_point_in_mesh_vtk (purkinje_uv\fractal_tree_uv.py:151) (644 samples, 0.11%)</title><rect x="65.3868%" y="212" width="0.1110%" height="15" fill="rgb(225,31,38)" fg:x="379221" fg:w="644"/><text x="65.6368%" y="222.50"></text></g><g><title>_grow_generations (purkinje_uv\fractal_tree_uv.py:464) (958 samples, 0.17%)</title><rect x="65.3362%" y="180" width="0.1652%" height="15" fill="rgb(250,208,3)" fg:x="378928" fg:w="958"/><text x="65.5862%" y="190.50"></text></g><g><title>_can_grow_to (purkinje_uv\fractal_tree_uv.py:222) (942 samples, 0.16%)</title><rect x="65.3390%" y="196" width="0.1624%" height="15" fill="rgb(246,54,23)" fg:x="378944" fg:w="942"/><text x="65.5890%" y="206.50"></text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:520) (36,360 samples, 6.27%)</title><rect x="59.3318%" y="164" width="6.2693%" height="15" fill="rgb(243,76,11)" fg:x="344104" fg:w="36360"/><text x="59.5818%" y="174.50">grow_tre..</text></g><g><title>project_new_point (purkinje_uv\mesh.py:196) (2,167 samples, 0.37%)</title><rect x="65.7049%" y="196" width="0.3736%" height="15" fill="rgb(245,21,50)" fg:x="381066" fg:w="2167"/><text x="65.9549%" y="206.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:225) (654 samples, 0.11%)</title><rect x="66.1049%" y="212" width="0.1128%" height="15" fill="rgb(228,9,43)" fg:x="383386" fg:w="654"/><text x="66.3549%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (1,096 samples, 0.19%)</title><rect x="66.9132%" y="228" width="0.1890%" height="15" fill="rgb(208,100,47)" fg:x="388074" fg:w="1096"/><text x="67.1632%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (905 samples, 0.16%)</title><rect x="67.1022%" y="228" width="0.1560%" height="15" fill="rgb(232,26,8)" fg:x="389170" fg:w="905"/><text x="67.3522%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:264) (6,623 samples, 1.14%)</title><rect x="66.8527%" y="212" width="1.1420%" height="15" fill="rgb(216,166,38)" fg:x="387723" fg:w="6623"/><text x="67.1027%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (1,014 samples, 0.17%)</title><rect x="67.8198%" y="228" width="0.1748%" height="15" fill="rgb(251,202,51)" fg:x="393332" fg:w="1014"/><text x="68.0698%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (840 samples, 0.14%)</title><rect x="68.0492%" y="228" width="0.1448%" height="15" fill="rgb(254,216,34)" fg:x="394662" fg:w="840"/><text x="68.2992%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (864 samples, 0.15%)</title><rect x="68.1940%" y="228" width="0.1490%" height="15" fill="rgb(251,32,27)" fg:x="395502" fg:w="864"/><text x="68.4440%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:265) (6,008 samples, 1.04%)</title><rect x="67.9947%" y="212" width="1.0359%" height="15" fill="rgb(208,127,28)" fg:x="394346" fg:w="6008"/><text x="68.2447%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (895 samples, 0.15%)</title><rect x="68.8763%" y="228" width="0.1543%" height="15" fill="rgb(224,137,22)" fg:x="399459" fg:w="895"/><text x="69.1263%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1664) (847 samples, 0.15%)</title><rect x="69.0784%" y="228" width="0.1460%" height="15" fill="rgb(254,70,32)" fg:x="400631" fg:w="847"/><text x="69.3284%" y="238.50"></text></g><g><title>cross (numpy\_core\numeric.py:1665) (835 samples, 0.14%)</title><rect x="69.2244%" y="228" width="0.1440%" height="15" fill="rgb(229,75,37)" fg:x="401478" fg:w="835"/><text x="69.4744%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:266) (5,965 samples, 1.03%)</title><rect x="69.0306%" y="212" width="1.0285%" height="15" fill="rgb(252,64,23)" fg:x="400354" fg:w="5965"/><text x="69.2806%" y="222.50"></text></g><g><title>cross (numpy\_core\numeric.py:1747) (943 samples, 0.16%)</title><rect x="69.8965%" y="228" width="0.1626%" height="15" fill="rgb(232,162,48)" fg:x="405376" fg:w="943"/><text x="70.1465%" y="238.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:272) (756 samples, 0.13%)</title><rect x="70.2070%" y="212" width="0.1304%" height="15" fill="rgb(246,160,12)" fg:x="407177" fg:w="756"/><text x="70.4570%" y="222.50"></text></g><g><title>project_point_check (purkinje_uv\mesh.py:273) (614 samples, 0.11%)</title><rect x="70.3374%" y="212" width="0.1059%" height="15" fill="rgb(247,166,0)" fg:x="407933" fg:w="614"/><text x="70.5874%" y="222.50"></text></g><g><title>project_new_point (purkinje_uv\mesh.py:199) (25,348 samples, 4.37%)</title><rect x="66.0820%" y="196" width="4.3706%" height="15" fill="rgb(249,219,21)" fg:x="383253" fg:w="25348"/><text x="66.3320%" y="206.50">proje..</text></g><g><title>_eval_field (purkinje_uv\fractal_tree_uv.py:117) (27,620 samples, 4.76%)</title><rect x="65.6940%" y="180" width="4.7623%" height="15" fill="rgb(205,209,3)" fg:x="381003" fg:w="27620"/><text x="65.9440%" y="190.50">_eval_..</text></g><g><title>grow_tree (purkinje_uv\fractal_tree_uv.py:546) (28,305 samples, 4.88%)</title><rect x="65.6856%" y="164" width="4.8805%" height="15" fill="rgb(243,44,1)" fg:x="380954" fg:w="28305"/><text x="65.9356%" y="174.50">grow_t..</text></g><g><title>_eval_field (purkinje_uv\fractal_tree_uv.py:118) (636 samples, 0.11%)</title><rect x="70.4564%" y="180" width="0.1097%" height="15" fill="rgb(206,159,16)" fg:x="408623" fg:w="636"/><text x="70.7064%" y="190.50"></text></g><g><title>run_ECG (src\bo_purkinje_tree.py:381) (65,283 samples, 11.26%)</title><rect x="59.3138%" y="148" width="11.2563%" height="15" fill="rgb(244,77,30)" fg:x="344000" fg:w="65283"/><text x="59.5638%" y="158.50">run_ECG (src\bo_p..</text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (707 samples, 0.12%)</title><rect x="71.0238%" y="276" width="0.1219%" height="15" fill="rgb(218,69,12)" fg:x="411914" fg:w="707"/><text x="71.2738%" y="286.50"></text></g><g><title>compute_neighborhood_map (fimpy\fim_base.py:142) (2,312 samples, 0.40%)</title><rect x="70.7538%" y="260" width="0.3986%" height="15" fill="rgb(212,87,7)" fg:x="410348" fg:w="2312"/><text x="71.0038%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:69) (2,388 samples, 0.41%)</title><rect x="70.7519%" y="244" width="0.4117%" height="15" fill="rgb(245,114,25)" fg:x="410337" fg:w="2388"/><text x="71.0019%" y="254.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:56) (3,075 samples, 0.53%)</title><rect x="70.6416%" y="180" width="0.5302%" height="15" fill="rgb(210,61,42)" fg:x="409697" fg:w="3075"/><text x="70.8916%" y="190.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:69) (3,074 samples, 0.53%)</title><rect x="70.6417%" y="196" width="0.5300%" height="15" fill="rgb(211,52,33)" fg:x="409698" fg:w="3074"/><text x="70.8917%" y="206.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:58) (3,074 samples, 0.53%)</title><rect x="70.6417%" y="212" width="0.5300%" height="15" fill="rgb(234,58,33)" fg:x="409698" fg:w="3074"/><text x="70.8917%" y="222.50"></text></g><g><title>__init__ (fimpy\fim_np.py:73) (3,074 samples, 0.53%)</title><rect x="70.6417%" y="228" width="0.5300%" height="15" fill="rgb(220,115,36)" fg:x="409698" fg:w="3074"/><text x="70.8917%" y="238.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (971 samples, 0.17%)</title><rect x="71.1793%" y="212" width="0.1674%" height="15" fill="rgb(243,153,54)" fg:x="412816" fg:w="971"/><text x="71.4293%" y="222.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (837 samples, 0.14%)</title><rect x="71.3947%" y="212" width="0.1443%" height="15" fill="rgb(251,47,18)" fg:x="414065" fg:w="837"/><text x="71.6447%" y="222.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:57) (2,346 samples, 0.40%)</title><rect x="71.1718%" y="180" width="0.4045%" height="15" fill="rgb(242,102,42)" fg:x="412772" fg:w="2346"/><text x="71.4218%" y="190.50"></text></g><g><title>comp_fim (fimpy\fim_base.py:487) (2,346 samples, 0.40%)</title><rect x="71.1718%" y="196" width="0.4045%" height="15" fill="rgb(234,31,38)" fg:x="412772" fg:w="2346"/><text x="71.4218%" y="206.50"></text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:300) (5,754 samples, 0.99%)</title><rect x="70.5845%" y="164" width="0.9921%" height="15" fill="rgb(221,117,51)" fg:x="409366" fg:w="5754"/><text x="70.8345%" y="174.50"></text></g><g><title>check_metrics_argument (fimpy\fim_base.py:108) (606 samples, 0.10%)</title><rect x="71.6423%" y="260" width="0.1045%" height="15" fill="rgb(212,20,18)" fg:x="415501" fg:w="606"/><text x="71.8923%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:56) (720 samples, 0.12%)</title><rect x="71.6420%" y="244" width="0.1241%" height="15" fill="rgb(245,133,36)" fg:x="415499" fg:w="720"/><text x="71.8920%" y="254.50"></text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (1,544 samples, 0.27%)</title><rect x="72.3758%" y="276" width="0.2662%" height="15" fill="rgb(212,6,19)" fg:x="419755" fg:w="1544"/><text x="72.6258%" y="286.50"></text></g><g><title>compute_neighborhood_map (fimpy\fim_base.py:142) (5,001 samples, 0.86%)</title><rect x="71.7947%" y="260" width="0.8623%" height="15" fill="rgb(218,1,36)" fg:x="416385" fg:w="5001"/><text x="72.0447%" y="270.50"></text></g><g><title>__init__ (fimpy\fim_base.py:69) (5,103 samples, 0.88%)</title><rect x="71.7932%" y="244" width="0.8799%" height="15" fill="rgb(246,84,54)" fg:x="416376" fg:w="5103"/><text x="72.0432%" y="254.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:56) (6,043 samples, 1.04%)</title><rect x="71.6404%" y="180" width="1.0420%" height="15" fill="rgb(242,110,6)" fg:x="415490" fg:w="6043"/><text x="71.8904%" y="190.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:69) (6,043 samples, 1.04%)</title><rect x="71.6404%" y="196" width="1.0420%" height="15" fill="rgb(214,47,5)" fg:x="415490" fg:w="6043"/><text x="71.8904%" y="206.50"></text></g><g><title>create_fim_solver (fimpy\solver.py:58) (6,043 samples, 1.04%)</title><rect x="71.6404%" y="212" width="1.0420%" height="15" fill="rgb(218,159,25)" fg:x="415490" fg:w="6043"/><text x="71.8904%" y="222.50"></text></g><g><title>__init__ (fimpy\fim_np.py:73) (6,043 samples, 1.04%)</title><rect x="71.6404%" y="228" width="1.0420%" height="15" fill="rgb(215,211,28)" fg:x="415490" fg:w="6043"/><text x="71.8904%" y="238.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (1,717 samples, 0.30%)</title><rect x="72.6967%" y="212" width="0.2961%" height="15" fill="rgb(238,59,32)" fg:x="421616" fg:w="1717"/><text x="72.9467%" y="222.50"></text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (1,439 samples, 0.25%)</title><rect x="73.0779%" y="212" width="0.2481%" height="15" fill="rgb(226,82,3)" fg:x="423827" fg:w="1439"/><text x="73.3279%" y="222.50"></text></g><g><title>activate_fim (purkinje_uv\purkinje_tree.py:57) (4,080 samples, 0.70%)</title><rect x="72.6824%" y="180" width="0.7035%" height="15" fill="rgb(240,164,32)" fg:x="421533" fg:w="4080"/><text x="72.9324%" y="190.50"></text></g><g><title>comp_fim (fimpy\fim_base.py:487) (4,079 samples, 0.70%)</title><rect x="72.6825%" y="196" width="0.7033%" height="15" fill="rgb(232,46,7)" fg:x="421534" fg:w="4079"/><text x="72.9325%" y="206.50"></text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:303) (10,494 samples, 1.81%)</title><rect x="71.5776%" y="164" width="1.8094%" height="15" fill="rgb(229,129,53)" fg:x="415126" fg:w="10494"/><text x="71.8276%" y="174.50">_..</text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:307) (921 samples, 0.16%)</title><rect x="73.5005%" y="180" width="0.1588%" height="15" fill="rgb(234,188,29)" fg:x="426278" fg:w="921"/><text x="73.7505%" y="190.50"></text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:312) (1,104 samples, 0.19%)</title><rect x="73.7390%" y="180" width="0.1904%" height="15" fill="rgb(246,141,4)" fg:x="427661" fg:w="1104"/><text x="73.9890%" y="190.50"></text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (714 samples, 0.12%)</title><rect x="74.0833%" y="244" width="0.1231%" height="15" fill="rgb(229,23,39)" fg:x="429658" fg:w="714"/><text x="74.3333%" y="254.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:120) (872 samples, 0.15%)</title><rect x="74.0566%" y="228" width="0.1504%" height="15" fill="rgb(206,12,3)" fg:x="429503" fg:w="872"/><text x="74.3066%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:123) (6,195 samples, 1.07%)</title><rect x="74.2856%" y="228" width="1.0682%" height="15" fill="rgb(252,226,20)" fg:x="430831" fg:w="6195"/><text x="74.5356%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:131) (657 samples, 0.11%)</title><rect x="75.4344%" y="228" width="0.1133%" height="15" fill="rgb(216,123,35)" fg:x="437494" fg:w="657"/><text x="75.6844%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:132) (2,491 samples, 0.43%)</title><rect x="75.5477%" y="228" width="0.4295%" height="15" fill="rgb(212,68,40)" fg:x="438151" fg:w="2491"/><text x="75.7977%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:135) (1,157 samples, 0.20%)</title><rect x="75.9772%" y="228" width="0.1995%" height="15" fill="rgb(254,125,32)" fg:x="440642" fg:w="1157"/><text x="76.2272%" y="238.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:293) (2,175 samples, 0.38%)</title><rect x="76.3271%" y="276" width="0.3750%" height="15" fill="rgb(253,97,22)" fg:x="442671" fg:w="2175"/><text x="76.5771%" y="286.50"></text></g><g><title>stack (numpy\_core\shape_base.py:464) (1,976 samples, 0.34%)</title><rect x="76.3614%" y="292" width="0.3407%" height="15" fill="rgb(241,101,14)" fg:x="442870" fg:w="1976"/><text x="76.6114%" y="302.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:320) (775 samples, 0.13%)</title><rect x="77.2994%" y="276" width="0.1336%" height="15" fill="rgb(238,103,29)" fg:x="448310" fg:w="775"/><text x="77.5494%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (641 samples, 0.11%)</title><rect x="77.3225%" y="292" width="0.1105%" height="15" fill="rgb(233,195,47)" fg:x="448444" fg:w="641"/><text x="77.5725%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (636 samples, 0.11%)</title><rect x="77.3233%" y="308" width="0.1097%" height="15" fill="rgb(246,218,30)" fg:x="448449" fg:w="636"/><text x="77.5733%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:321) (693 samples, 0.12%)</title><rect x="77.4330%" y="276" width="0.1195%" height="15" fill="rgb(219,145,47)" fg:x="449085" fg:w="693"/><text x="77.6830%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (584 samples, 0.10%)</title><rect x="77.4518%" y="292" width="0.1007%" height="15" fill="rgb(243,12,26)" fg:x="449194" fg:w="584"/><text x="77.7018%" y="302.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:323) (1,023 samples, 0.18%)</title><rect x="77.5525%" y="276" width="0.1764%" height="15" fill="rgb(214,87,16)" fg:x="449778" fg:w="1023"/><text x="77.8025%" y="286.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:342) (3,440 samples, 0.59%)</title><rect x="77.8859%" y="276" width="0.5931%" height="15" fill="rgb(208,99,42)" fg:x="451712" fg:w="3440"/><text x="78.1359%" y="286.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (1,539 samples, 0.27%)</title><rect x="78.2137%" y="292" width="0.2654%" height="15" fill="rgb(253,99,2)" fg:x="453613" fg:w="1539"/><text x="78.4637%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (1,520 samples, 0.26%)</title><rect x="78.2170%" y="308" width="0.2621%" height="15" fill="rgb(220,168,23)" fg:x="453632" fg:w="1520"/><text x="78.4670%" y="318.50"></text></g><g><title>_wrapreduction_any_all (numpy\_core\fromnumeric.py:102) (634 samples, 0.11%)</title><rect x="78.5858%" y="308" width="0.1093%" height="15" fill="rgb(242,38,24)" fg:x="455771" fg:w="634"/><text x="78.8358%" y="318.50"></text></g><g><title>any (numpy\_core\fromnumeric.py:2602) (647 samples, 0.11%)</title><rect x="78.5853%" y="292" width="0.1116%" height="15" fill="rgb(225,182,9)" fg:x="455768" fg:w="647"/><text x="78.8353%" y="302.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:273) (14,480 samples, 2.50%)</title><rect x="76.2953%" y="260" width="2.4967%" height="15" fill="rgb(243,178,37)" fg:x="442487" fg:w="14480"/><text x="76.5453%" y="270.50">ts..</text></g><g><title>calculate_tet_update (fimpy\fim_base.py:344) (1,809 samples, 0.31%)</title><rect x="78.4801%" y="276" width="0.3119%" height="15" fill="rgb(232,139,19)" fg:x="455158" fg:w="1809"/><text x="78.7301%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (744 samples, 0.13%)</title><rect x="79.2576%" y="308" width="0.1283%" height="15" fill="rgb(225,201,24)" fg:x="459667" fg:w="744"/><text x="79.5076%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (728 samples, 0.13%)</title><rect x="79.2603%" y="324" width="0.1255%" height="15" fill="rgb(221,47,46)" fg:x="459683" fg:w="728"/><text x="79.5103%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (3,220 samples, 0.56%)</title><rect x="79.3859%" y="308" width="0.5552%" height="15" fill="rgb(249,23,13)" fg:x="460411" fg:w="3220"/><text x="79.6359%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (3,203 samples, 0.55%)</title><rect x="79.3888%" y="324" width="0.5523%" height="15" fill="rgb(219,9,5)" fg:x="460428" fg:w="3203"/><text x="79.6388%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (4,197 samples, 0.72%)</title><rect x="79.2314%" y="292" width="0.7237%" height="15" fill="rgb(254,171,16)" fg:x="459515" fg:w="4197"/><text x="79.4814%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (5,714 samples, 0.99%)</title><rect x="79.1303%" y="276" width="0.9852%" height="15" fill="rgb(230,171,20)" fg:x="458929" fg:w="5714"/><text x="79.3803%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (1,678 samples, 0.29%)</title><rect x="80.1156%" y="276" width="0.2893%" height="15" fill="rgb(210,71,41)" fg:x="464643" fg:w="1678"/><text x="80.3656%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:277) (9,350 samples, 1.61%)</title><rect x="78.8031%" y="260" width="1.6122%" height="15" fill="rgb(206,173,20)" fg:x="457031" fg:w="9350"/><text x="79.0531%" y="270.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (671 samples, 0.12%)</title><rect x="80.8335%" y="308" width="0.1157%" height="15" fill="rgb(233,88,34)" fg:x="468807" fg:w="671"/><text x="81.0835%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (656 samples, 0.11%)</title><rect x="80.8361%" y="324" width="0.1131%" height="15" fill="rgb(223,209,46)" fg:x="468822" fg:w="656"/><text x="81.0861%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (3,351 samples, 0.58%)</title><rect x="80.9492%" y="308" width="0.5778%" height="15" fill="rgb(250,43,18)" fg:x="469478" fg:w="3351"/><text x="81.1992%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (3,335 samples, 0.58%)</title><rect x="80.9520%" y="324" width="0.5750%" height="15" fill="rgb(208,13,10)" fg:x="469494" fg:w="3335"/><text x="81.2020%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (4,242 samples, 0.73%)</title><rect x="80.8103%" y="292" width="0.7314%" height="15" fill="rgb(212,200,36)" fg:x="468672" fg:w="4242"/><text x="81.0603%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (592 samples, 0.10%)</title><rect x="81.5869%" y="292" width="0.1021%" height="15" fill="rgb(225,90,30)" fg:x="473176" fg:w="592"/><text x="81.8369%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (5,696 samples, 0.98%)</title><rect x="80.7111%" y="276" width="0.9821%" height="15" fill="rgb(236,182,39)" fg:x="468097" fg:w="5696"/><text x="80.9611%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (1,671 samples, 0.29%)</title><rect x="81.6932%" y="276" width="0.2881%" height="15" fill="rgb(212,144,35)" fg:x="473793" fg:w="1671"/><text x="81.9432%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:278) (9,129 samples, 1.57%)</title><rect x="80.4152%" y="260" width="1.5741%" height="15" fill="rgb(228,63,44)" fg:x="466381" fg:w="9129"/><text x="80.6652%" y="270.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (682 samples, 0.12%)</title><rect x="82.4202%" y="308" width="0.1176%" height="15" fill="rgb(228,109,6)" fg:x="478009" fg:w="682"/><text x="82.6702%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (667 samples, 0.12%)</title><rect x="82.4228%" y="324" width="0.1150%" height="15" fill="rgb(238,117,24)" fg:x="478024" fg:w="667"/><text x="82.6728%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (3,313 samples, 0.57%)</title><rect x="82.5378%" y="308" width="0.5712%" height="15" fill="rgb(242,26,26)" fg:x="478691" fg:w="3313"/><text x="82.7878%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (3,288 samples, 0.57%)</title><rect x="82.5421%" y="324" width="0.5669%" height="15" fill="rgb(221,92,48)" fg:x="478716" fg:w="3288"/><text x="82.7921%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (4,198 samples, 0.72%)</title><rect x="82.3962%" y="292" width="0.7238%" height="15" fill="rgb(209,209,32)" fg:x="477870" fg:w="4198"/><text x="82.6462%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (601 samples, 0.10%)</title><rect x="83.1635%" y="292" width="0.1036%" height="15" fill="rgb(221,70,22)" fg:x="482320" fg:w="601"/><text x="83.4135%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (5,598 samples, 0.97%)</title><rect x="82.3060%" y="276" width="0.9652%" height="15" fill="rgb(248,145,5)" fg:x="477347" fg:w="5598"/><text x="82.5560%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (1,682 samples, 0.29%)</title><rect x="83.2713%" y="276" width="0.2900%" height="15" fill="rgb(226,116,26)" fg:x="482945" fg:w="1682"/><text x="83.5213%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:280) (9,147 samples, 1.58%)</title><rect x="81.9922%" y="260" width="1.5772%" height="15" fill="rgb(244,5,17)" fg:x="475527" fg:w="9147"/><text x="82.2422%" y="270.50"></text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:436) (42,380 samples, 7.31%)</title><rect x="76.2671%" y="244" width="7.3073%" height="15" fill="rgb(252,159,33)" fg:x="442323" fg:w="42380"/><text x="76.5171%" y="254.50">calculate_..</text></g><g><title>comp_marked_points (fimpy\fim_np.py:142) (43,177 samples, 7.44%)</title><rect x="76.1767%" y="228" width="7.4447%" height="15" fill="rgb(206,71,0)" fg:x="441799" fg:w="43177"/><text x="76.4267%" y="238.50">comp_marke..</text></g><g><title>_comp_fim (fimpy\fim_np.py:168) (55,575 samples, 9.58%)</title><rect x="74.0392%" y="212" width="9.5825%" height="15" fill="rgb(233,118,54)" fg:x="429402" fg:w="55575"/><text x="74.2892%" y="222.50">_comp_fim (fim..</text></g><g><title>unique (numpy\lib\_arraysetops_impl.py:291) (846 samples, 0.15%)</title><rect x="83.7516%" y="244" width="0.1459%" height="15" fill="rgb(234,83,48)" fg:x="485731" fg:w="846"/><text x="84.0016%" y="254.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:120) (1,013 samples, 0.17%)</title><rect x="83.7232%" y="228" width="0.1747%" height="15" fill="rgb(228,3,54)" fg:x="485566" fg:w="1013"/><text x="83.9732%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:123) (7,870 samples, 1.36%)</title><rect x="83.9891%" y="228" width="1.3570%" height="15" fill="rgb(226,155,13)" fg:x="487108" fg:w="7870"/><text x="84.2391%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:131) (922 samples, 0.16%)</title><rect x="85.4388%" y="228" width="0.1590%" height="15" fill="rgb(241,28,37)" fg:x="495516" fg:w="922"/><text x="85.6888%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:132) (3,025 samples, 0.52%)</title><rect x="85.5978%" y="228" width="0.5216%" height="15" fill="rgb(233,93,10)" fg:x="496438" fg:w="3025"/><text x="85.8478%" y="238.50"></text></g><g><title>comp_marked_points (fimpy\fim_np.py:135) (1,451 samples, 0.25%)</title><rect x="86.1194%" y="228" width="0.2502%" height="15" fill="rgb(225,113,19)" fg:x="499463" fg:w="1451"/><text x="86.3694%" y="238.50"></text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:435) (606 samples, 0.10%)</title><rect x="86.3742%" y="244" width="0.1045%" height="15" fill="rgb(241,2,18)" fg:x="500941" fg:w="606"/><text x="86.6242%" y="254.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:293) (2,825 samples, 0.49%)</title><rect x="86.5432%" y="276" width="0.4871%" height="15" fill="rgb(228,207,21)" fg:x="501921" fg:w="2825"/><text x="86.7932%" y="286.50"></text></g><g><title>stack (numpy\_core\shape_base.py:464) (2,650 samples, 0.46%)</title><rect x="86.5734%" y="292" width="0.4569%" height="15" fill="rgb(213,211,35)" fg:x="502096" fg:w="2650"/><text x="86.8234%" y="302.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:297) (714 samples, 0.12%)</title><rect x="87.0663%" y="276" width="0.1231%" height="15" fill="rgb(209,83,10)" fg:x="504955" fg:w="714"/><text x="87.3163%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (707 samples, 0.12%)</title><rect x="87.0675%" y="292" width="0.1219%" height="15" fill="rgb(209,164,1)" fg:x="504962" fg:w="707"/><text x="87.3175%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (700 samples, 0.12%)</title><rect x="87.0687%" y="308" width="0.1207%" height="15" fill="rgb(213,184,43)" fg:x="504969" fg:w="700"/><text x="87.3187%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:298) (620 samples, 0.11%)</title><rect x="87.1894%" y="276" width="0.1069%" height="15" fill="rgb(231,61,34)" fg:x="505669" fg:w="620"/><text x="87.4394%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (620 samples, 0.11%)</title><rect x="87.1894%" y="292" width="0.1069%" height="15" fill="rgb(235,75,3)" fg:x="505669" fg:w="620"/><text x="87.4394%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (616 samples, 0.11%)</title><rect x="87.1901%" y="308" width="0.1062%" height="15" fill="rgb(220,106,47)" fg:x="505673" fg:w="616"/><text x="87.4401%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:299) (613 samples, 0.11%)</title><rect x="87.2963%" y="276" width="0.1057%" height="15" fill="rgb(210,196,33)" fg:x="506289" fg:w="613"/><text x="87.5463%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (613 samples, 0.11%)</title><rect x="87.2963%" y="292" width="0.1057%" height="15" fill="rgb(229,154,42)" fg:x="506289" fg:w="613"/><text x="87.5463%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (611 samples, 0.11%)</title><rect x="87.2967%" y="308" width="0.1054%" height="15" fill="rgb(228,114,26)" fg:x="506291" fg:w="611"/><text x="87.5467%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:320) (985 samples, 0.17%)</title><rect x="87.7374%" y="276" width="0.1698%" height="15" fill="rgb(208,144,1)" fg:x="508847" fg:w="985"/><text x="87.9874%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (843 samples, 0.15%)</title><rect x="87.7619%" y="292" width="0.1454%" height="15" fill="rgb(239,112,37)" fg:x="508989" fg:w="843"/><text x="88.0119%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (838 samples, 0.14%)</title><rect x="87.7627%" y="308" width="0.1445%" height="15" fill="rgb(210,96,50)" fg:x="508994" fg:w="838"/><text x="88.0127%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:321) (914 samples, 0.16%)</title><rect x="87.9072%" y="276" width="0.1576%" height="15" fill="rgb(222,178,2)" fg:x="509832" fg:w="914"/><text x="88.1572%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (768 samples, 0.13%)</title><rect x="87.9324%" y="292" width="0.1324%" height="15" fill="rgb(226,74,18)" fg:x="509978" fg:w="768"/><text x="88.1824%" y="302.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (758 samples, 0.13%)</title><rect x="87.9341%" y="308" width="0.1307%" height="15" fill="rgb(225,67,54)" fg:x="509988" fg:w="758"/><text x="88.1841%" y="318.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:323) (1,128 samples, 0.19%)</title><rect x="88.0648%" y="276" width="0.1945%" height="15" fill="rgb(251,92,32)" fg:x="510746" fg:w="1128"/><text x="88.3148%" y="286.50"></text></g><g><title>calculate_tet_update (fimpy\fim_base.py:342) (4,440 samples, 0.77%)</title><rect x="88.4455%" y="276" width="0.7656%" height="15" fill="rgb(228,149,22)" fg:x="512954" fg:w="4440"/><text x="88.6955%" y="286.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (1,949 samples, 0.34%)</title><rect x="88.8750%" y="292" width="0.3361%" height="15" fill="rgb(243,54,13)" fg:x="515445" fg:w="1949"/><text x="89.1250%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (1,924 samples, 0.33%)</title><rect x="88.8793%" y="308" width="0.3317%" height="15" fill="rgb(243,180,28)" fg:x="515470" fg:w="1924"/><text x="89.1293%" y="318.50"></text></g><g><title>_wrapreduction_any_all (numpy\_core\fromnumeric.py:102) (924 samples, 0.16%)</title><rect x="89.3323%" y="308" width="0.1593%" height="15" fill="rgb(208,167,24)" fg:x="518097" fg:w="924"/><text x="89.5823%" y="318.50"></text></g><g><title>any (numpy\_core\fromnumeric.py:2602) (934 samples, 0.16%)</title><rect x="89.3313%" y="292" width="0.1610%" height="15" fill="rgb(245,73,45)" fg:x="518091" fg:w="934"/><text x="89.5813%" y="302.50"></text></g><g><title>sum (numpy\_core\fromnumeric.py:2485) (679 samples, 0.12%)</title><rect x="89.4923%" y="292" width="0.1171%" height="15" fill="rgb(237,203,48)" fg:x="519025" fg:w="679"/><text x="89.7423%" y="302.50"></text></g><g><title>_wrapreduction (numpy\_core\fromnumeric.py:86) (667 samples, 0.12%)</title><rect x="89.4944%" y="308" width="0.1150%" height="15" fill="rgb(211,197,16)" fg:x="519037" fg:w="667"/><text x="89.7444%" y="318.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:273) (17,991 samples, 3.10%)</title><rect x="86.5080%" y="260" width="3.1021%" height="15" fill="rgb(243,99,51)" fg:x="501717" fg:w="17991"/><text x="86.7580%" y="270.50">tsi..</text></g><g><title>calculate_tet_update (fimpy\fim_base.py:344) (2,308 samples, 0.40%)</title><rect x="89.2121%" y="276" width="0.3980%" height="15" fill="rgb(215,123,29)" fg:x="517400" fg:w="2308"/><text x="89.4621%" y="286.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (675 samples, 0.12%)</title><rect x="89.6370%" y="276" width="0.1164%" height="15" fill="rgb(239,186,37)" fg:x="519864" fg:w="675"/><text x="89.8870%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (673 samples, 0.12%)</title><rect x="89.6373%" y="292" width="0.1160%" height="15" fill="rgb(252,136,39)" fg:x="519866" fg:w="673"/><text x="89.8873%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (665 samples, 0.11%)</title><rect x="89.6387%" y="308" width="0.1147%" height="15" fill="rgb(223,213,32)" fg:x="519874" fg:w="665"/><text x="89.8887%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (635 samples, 0.11%)</title><rect x="89.7534%" y="276" width="0.1095%" height="15" fill="rgb(233,115,5)" fg:x="520539" fg:w="635"/><text x="90.0034%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (633 samples, 0.11%)</title><rect x="89.7537%" y="292" width="0.1091%" height="15" fill="rgb(207,226,44)" fg:x="520541" fg:w="633"/><text x="90.0037%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (631 samples, 0.11%)</title><rect x="89.7541%" y="308" width="0.1088%" height="15" fill="rgb(208,126,0)" fg:x="520543" fg:w="631"/><text x="90.0041%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (919 samples, 0.16%)</title><rect x="90.1744%" y="308" width="0.1585%" height="15" fill="rgb(244,66,21)" fg:x="522981" fg:w="919"/><text x="90.4244%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (900 samples, 0.16%)</title><rect x="90.1777%" y="324" width="0.1552%" height="15" fill="rgb(222,97,12)" fg:x="523000" fg:w="900"/><text x="90.4277%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (4,234 samples, 0.73%)</title><rect x="90.3329%" y="308" width="0.7300%" height="15" fill="rgb(219,213,19)" fg:x="523900" fg:w="4234"/><text x="90.5829%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (4,208 samples, 0.73%)</title><rect x="90.3374%" y="324" width="0.7256%" height="15" fill="rgb(252,169,30)" fg:x="523926" fg:w="4208"/><text x="90.5874%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,420 samples, 0.93%)</title><rect x="90.1437%" y="292" width="0.9345%" height="15" fill="rgb(206,32,51)" fg:x="522803" fg:w="5420"/><text x="90.3937%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (653 samples, 0.11%)</title><rect x="91.1476%" y="292" width="0.1126%" height="15" fill="rgb(250,172,42)" fg:x="528625" fg:w="653"/><text x="91.3976%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (7,220 samples, 1.24%)</title><rect x="90.0189%" y="276" width="1.2449%" height="15" fill="rgb(209,34,43)" fg:x="522079" fg:w="7220"/><text x="90.2689%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (621 samples, 0.11%)</title><rect x="91.2685%" y="292" width="0.1071%" height="15" fill="rgb(223,11,35)" fg:x="529326" fg:w="621"/><text x="91.5185%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (619 samples, 0.11%)</title><rect x="91.2688%" y="308" width="0.1067%" height="15" fill="rgb(251,219,26)" fg:x="529328" fg:w="619"/><text x="91.5188%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (612 samples, 0.11%)</title><rect x="91.2700%" y="324" width="0.1055%" height="15" fill="rgb(231,119,3)" fg:x="529335" fg:w="612"/><text x="91.5200%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (620 samples, 0.11%)</title><rect x="91.3755%" y="292" width="0.1069%" height="15" fill="rgb(216,97,11)" fg:x="529947" fg:w="620"/><text x="91.6255%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (617 samples, 0.11%)</title><rect x="91.3760%" y="308" width="0.1064%" height="15" fill="rgb(223,59,9)" fg:x="529950" fg:w="617"/><text x="91.6260%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (612 samples, 0.11%)</title><rect x="91.3769%" y="324" width="0.1055%" height="15" fill="rgb(233,93,31)" fg:x="529955" fg:w="612"/><text x="91.6269%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,046 samples, 0.35%)</title><rect x="91.2638%" y="276" width="0.3528%" height="15" fill="rgb(239,81,33)" fg:x="529299" fg:w="2046"/><text x="91.5138%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:277) (11,611 samples, 2.00%)</title><rect x="89.6237%" y="260" width="2.0020%" height="15" fill="rgb(213,120,34)" fg:x="519787" fg:w="11611"/><text x="89.8737%" y="270.50">t..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (617 samples, 0.11%)</title><rect x="91.6333%" y="276" width="0.1064%" height="15" fill="rgb(243,49,53)" fg:x="531442" fg:w="617"/><text x="91.8833%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (614 samples, 0.11%)</title><rect x="91.6338%" y="292" width="0.1059%" height="15" fill="rgb(247,216,33)" fg:x="531445" fg:w="614"/><text x="91.8838%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (612 samples, 0.11%)</title><rect x="91.6342%" y="308" width="0.1055%" height="15" fill="rgb(226,26,14)" fg:x="531447" fg:w="612"/><text x="91.8842%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (628 samples, 0.11%)</title><rect x="91.7397%" y="276" width="0.1083%" height="15" fill="rgb(215,49,53)" fg:x="532059" fg:w="628"/><text x="91.9897%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (626 samples, 0.11%)</title><rect x="91.7400%" y="292" width="0.1079%" height="15" fill="rgb(245,162,40)" fg:x="532061" fg:w="626"/><text x="91.9900%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (625 samples, 0.11%)</title><rect x="91.7402%" y="308" width="0.1078%" height="15" fill="rgb(229,68,17)" fg:x="532062" fg:w="625"/><text x="91.9902%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (888 samples, 0.15%)</title><rect x="92.1397%" y="308" width="0.1531%" height="15" fill="rgb(213,182,10)" fg:x="534379" fg:w="888"/><text x="92.3897%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (875 samples, 0.15%)</title><rect x="92.1420%" y="324" width="0.1509%" height="15" fill="rgb(245,125,30)" fg:x="534392" fg:w="875"/><text x="92.3920%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (4,153 samples, 0.72%)</title><rect x="92.2928%" y="308" width="0.7161%" height="15" fill="rgb(232,202,2)" fg:x="535267" fg:w="4153"/><text x="92.5428%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (4,135 samples, 0.71%)</title><rect x="92.2959%" y="324" width="0.7130%" height="15" fill="rgb(237,140,51)" fg:x="535285" fg:w="4135"/><text x="92.5459%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,230 samples, 0.90%)</title><rect x="92.1157%" y="292" width="0.9018%" height="15" fill="rgb(236,157,25)" fg:x="534240" fg:w="5230"/><text x="92.3657%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (644 samples, 0.11%)</title><rect x="93.0779%" y="292" width="0.1110%" height="15" fill="rgb(219,209,0)" fg:x="539820" fg:w="644"/><text x="93.3279%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (6,965 samples, 1.20%)</title><rect x="91.9926%" y="276" width="1.2009%" height="15" fill="rgb(240,116,54)" fg:x="533526" fg:w="6965"/><text x="92.2426%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (680 samples, 0.12%)</title><rect x="93.1989%" y="292" width="0.1172%" height="15" fill="rgb(216,10,36)" fg:x="540522" fg:w="680"/><text x="93.4489%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (678 samples, 0.12%)</title><rect x="93.1993%" y="308" width="0.1169%" height="15" fill="rgb(222,72,44)" fg:x="540524" fg:w="678"/><text x="93.4493%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (673 samples, 0.12%)</title><rect x="93.2001%" y="324" width="0.1160%" height="15" fill="rgb(232,159,9)" fg:x="540529" fg:w="673"/><text x="93.4501%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (629 samples, 0.11%)</title><rect x="93.3162%" y="292" width="0.1085%" height="15" fill="rgb(210,39,32)" fg:x="541202" fg:w="629"/><text x="93.5662%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (627 samples, 0.11%)</title><rect x="93.3165%" y="308" width="0.1081%" height="15" fill="rgb(216,194,45)" fg:x="541204" fg:w="627"/><text x="93.5665%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (623 samples, 0.11%)</title><rect x="93.3172%" y="324" width="0.1074%" height="15" fill="rgb(218,18,35)" fg:x="541208" fg:w="623"/><text x="93.5672%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (2,070 samples, 0.36%)</title><rect x="93.1936%" y="276" width="0.3569%" height="15" fill="rgb(207,83,51)" fg:x="540491" fg:w="2070"/><text x="93.4436%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:278) (11,217 samples, 1.93%)</title><rect x="91.6257%" y="260" width="1.9341%" height="15" fill="rgb(225,63,43)" fg:x="531398" fg:w="11217"/><text x="91.8757%" y="270.50">t..</text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:81) (621 samples, 0.11%)</title><rect x="93.5696%" y="276" width="0.1071%" height="15" fill="rgb(207,57,36)" fg:x="542672" fg:w="621"/><text x="93.8196%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (621 samples, 0.11%)</title><rect x="93.5696%" y="292" width="0.1071%" height="15" fill="rgb(216,99,33)" fg:x="542672" fg:w="621"/><text x="93.8196%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (616 samples, 0.11%)</title><rect x="93.5705%" y="308" width="0.1062%" height="15" fill="rgb(225,42,16)" fg:x="542677" fg:w="616"/><text x="93.8205%" y="318.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:82) (624 samples, 0.11%)</title><rect x="93.6767%" y="276" width="0.1076%" height="15" fill="rgb(220,201,45)" fg:x="543293" fg:w="624"/><text x="93.9267%" y="286.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (623 samples, 0.11%)</title><rect x="93.6769%" y="292" width="0.1074%" height="15" fill="rgb(225,33,4)" fg:x="543294" fg:w="623"/><text x="93.9269%" y="302.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (621 samples, 0.11%)</title><rect x="93.6772%" y="308" width="0.1071%" height="15" fill="rgb(224,33,50)" fg:x="543296" fg:w="621"/><text x="93.9272%" y="318.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (916 samples, 0.16%)</title><rect x="94.0724%" y="308" width="0.1579%" height="15" fill="rgb(246,198,51)" fg:x="545588" fg:w="916"/><text x="94.3224%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (898 samples, 0.15%)</title><rect x="94.0755%" y="324" width="0.1548%" height="15" fill="rgb(205,22,4)" fg:x="545606" fg:w="898"/><text x="94.3255%" y="334.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:205) (4,225 samples, 0.73%)</title><rect x="94.2304%" y="308" width="0.7285%" height="15" fill="rgb(206,3,8)" fg:x="546504" fg:w="4225"/><text x="94.4804%" y="318.50"></text></g><g><title>_reverse_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:256) (4,207 samples, 0.73%)</title><rect x="94.2335%" y="324" width="0.7254%" height="15" fill="rgb(251,23,15)" fg:x="546522" fg:w="4207"/><text x="94.4835%" y="334.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:26) (5,366 samples, 0.93%)</title><rect x="94.0447%" y="292" width="0.9252%" height="15" fill="rgb(252,88,28)" fg:x="545427" fg:w="5366"/><text x="94.2947%" y="302.50"></text></g><g><title>tsitsiklis_update_triang_3D (fimpy\fim_np.py:28) (624 samples, 0.11%)</title><rect x="95.0266%" y="292" width="0.1076%" height="15" fill="rgb(212,127,14)" fg:x="551122" fg:w="624"/><text x="95.2766%" y="302.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:88) (7,067 samples, 1.22%)</title><rect x="93.9203%" y="276" width="1.2185%" height="15" fill="rgb(247,145,37)" fg:x="544706" fg:w="7067"/><text x="94.1703%" y="286.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:202) (619 samples, 0.11%)</title><rect x="95.1430%" y="292" width="0.1067%" height="15" fill="rgb(209,117,53)" fg:x="551797" fg:w="619"/><text x="95.3930%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (619 samples, 0.11%)</title><rect x="95.1430%" y="308" width="0.1067%" height="15" fill="rgb(212,90,42)" fg:x="551797" fg:w="619"/><text x="95.3930%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (614 samples, 0.11%)</title><rect x="95.1439%" y="324" width="0.1059%" height="15" fill="rgb(218,164,37)" fg:x="551802" fg:w="614"/><text x="95.3939%" y="334.50"></text></g><g><title>tsitsiklis_update_point_sol (fimpy\fim_base.py:203) (591 samples, 0.10%)</title><rect x="95.2497%" y="292" width="0.1019%" height="15" fill="rgb(246,65,34)" fg:x="552416" fg:w="591"/><text x="95.4997%" y="302.50"></text></g><g><title>closure (vtkmodules\numpy_interface\dataset_adapter.py:193) (590 samples, 0.10%)</title><rect x="95.2499%" y="308" width="0.1017%" height="15" fill="rgb(231,100,33)" fg:x="552417" fg:w="590"/><text x="95.4999%" y="318.50"></text></g><g><title>_numeric_op (vtkmodules\numpy_interface\dataset_adapter.py:250) (589 samples, 0.10%)</title><rect x="95.2501%" y="324" width="0.1016%" height="15" fill="rgb(228,126,14)" fg:x="552418" fg:w="589"/><text x="95.5001%" y="334.50"></text></g><g><title>tsitsiklis_update_triang (fimpy\fim_np.py:89) (1,999 samples, 0.34%)</title><rect x="95.1389%" y="276" width="0.3447%" height="15" fill="rgb(215,173,21)" fg:x="551773" fg:w="1999"/><text x="95.3889%" y="286.50"></text></g><g><title>tsitsiklis_update_tetra (fimpy\fim_base.py:280) (11,194 samples, 1.93%)</title><rect x="93.5639%" y="260" width="1.9301%" height="15" fill="rgb(210,6,40)" fg:x="542639" fg:w="11194"/><text x="93.8139%" y="270.50">t..</text></g><g><title>calculate_specific_tetra_updates (fimpy\fim_base.py:436) (52,315 samples, 9.02%)</title><rect x="86.4787%" y="244" width="9.0204%" height="15" fill="rgb(212,48,18)" fg:x="501547" fg:w="52315"/><text x="86.7287%" y="254.50">calculate_spe..</text></g><g><title>_comp_fim (fimpy\fim_np.py:172) (68,832 samples, 11.87%)</title><rect x="83.6890%" y="212" width="11.8683%" height="15" fill="rgb(230,214,11)" fg:x="485368" fg:w="68832"/><text x="83.9390%" y="222.50">_comp_fim (fimpy\f..</text></g><g><title>comp_marked_points (fimpy\fim_np.py:142) (53,286 samples, 9.19%)</title><rect x="86.3695%" y="228" width="9.1878%" height="15" fill="rgb(254,105,39)" fg:x="500914" fg:w="53286"/><text x="86.6195%" y="238.50">comp_marked_p..</text></g><g><title>activate_fim (myocardial_mesh\MyocardialMesh.py:322) (125,065 samples, 21.56%)</title><rect x="74.0280%" y="180" width="21.5642%" height="15" fill="rgb(245,158,5)" fg:x="429337" fg:w="125065"/><text x="74.2780%" y="190.50">activate_fim (myocardial_mesh\Myoc..</text></g><g><title>comp_fim (fimpy\fim_base.py:487) (125,063 samples, 21.56%)</title><rect x="74.0283%" y="196" width="21.5639%" height="15" fill="rgb(249,208,11)" fg:x="429339" fg:w="125063"/><text x="74.2783%" y="206.50">comp_fim (fimpy\fim_base.py:487)</text></g><g><title>_activate_purkinje_and_myo (src\bo_purkinje_tree.py:308) (129,207 samples, 22.28%)</title><rect x="73.3876%" y="164" width="22.2784%" height="15" fill="rgb(210,39,28)" fg:x="425623" fg:w="129207"/><text x="73.6376%" y="174.50">_activate_purkinje_and_myo (src\bo_..</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:407) (145,494 samples, 25.09%)</title><rect x="70.5845%" y="148" width="25.0866%" height="15" fill="rgb(211,56,53)" fg:x="409366" fg:w="145494"/><text x="70.8345%" y="158.50">run_ECG (src\bo_purkinje_tree.py:407)</text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:418) (4,297 samples, 0.74%)</title><rect x="95.6744%" y="164" width="0.7409%" height="15" fill="rgb(226,201,30)" fg:x="554879" fg:w="4297"/><text x="95.9244%" y="174.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:441) (683 samples, 0.12%)</title><rect x="96.4182%" y="164" width="0.1178%" height="15" fill="rgb(239,101,34)" fg:x="559193" fg:w="683"/><text x="96.6682%" y="174.50"></text></g><g><title>_matmul_vector (scipy\sparse\_compressed.py:526) (7,712 samples, 1.33%)</title><rect x="96.7952%" y="228" width="1.3297%" height="15" fill="rgb(226,209,5)" fg:x="561379" fg:w="7712"/><text x="97.0452%" y="238.50"></text></g><g><title>_matmul_dispatch (scipy\sparse\_base.py:658) (9,478 samples, 1.63%)</title><rect x="96.6703%" y="212" width="1.6342%" height="15" fill="rgb(250,105,47)" fg:x="560655" fg:w="9478"/><text x="96.9203%" y="222.50"></text></g><g><title>ravel (numpy\_core\fromnumeric.py:2020) (970 samples, 0.17%)</title><rect x="98.1373%" y="228" width="0.1673%" height="15" fill="rgb(230,72,3)" fg:x="569163" fg:w="970"/><text x="98.3873%" y="238.50"></text></g><g><title>__array_finalize__ (vtkmodules\numpy_interface\dataset_adapter.py:286) (728 samples, 0.13%)</title><rect x="98.1790%" y="244" width="0.1255%" height="15" fill="rgb(232,218,39)" fg:x="569405" fg:w="728"/><text x="98.4290%" y="254.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:442) (10,292 samples, 1.77%)</title><rect x="96.5360%" y="164" width="1.7746%" height="15" fill="rgb(248,166,6)" fg:x="559876" fg:w="10292"/><text x="96.7860%" y="174.50">n..</text></g><g><title>dot (scipy\sparse\_base.py:497) (10,068 samples, 1.74%)</title><rect x="96.5746%" y="180" width="1.7360%" height="15" fill="rgb(247,89,20)" fg:x="560100" fg:w="10068"/><text x="96.8246%" y="190.50"></text></g><g><title>__matmul__ (scipy\sparse\_base.py:732) (9,837 samples, 1.70%)</title><rect x="96.6145%" y="196" width="1.6961%" height="15" fill="rgb(248,130,54)" fg:x="560331" fg:w="9837"/><text x="96.8645%" y="206.50"></text></g><g><title>run_ECG (src\bo_purkinje_tree.py:421) (15,312 samples, 2.64%)</title><rect x="95.6711%" y="148" width="2.6402%" height="15" fill="rgb(234,196,4)" fg:x="554860" fg:w="15312"/><text x="95.9211%" y="158.50">ru..</text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:418) (1,468 samples, 0.25%)</title><rect x="98.3154%" y="164" width="0.2531%" height="15" fill="rgb(250,143,31)" fg:x="570196" fg:w="1468"/><text x="98.5654%" y="174.50"></text></g><g><title>_matmul_vector (scipy\sparse\_compressed.py:526) (2,439 samples, 0.42%)</title><rect x="98.6927%" y="228" width="0.4205%" height="15" fill="rgb(211,110,34)" fg:x="572384" fg:w="2439"/><text x="98.9427%" y="238.50"></text></g><g><title>_matmul_dispatch (scipy\sparse\_base.py:658) (3,014 samples, 0.52%)</title><rect x="98.6496%" y="212" width="0.5197%" height="15" fill="rgb(215,124,48)" fg:x="572134" fg:w="3014"/><text x="98.8996%" y="222.50"></text></g><g><title>new_get_ecg (myocardial_mesh\MyocardialMesh.py:442) (3,288 samples, 0.57%)</title><rect x="98.6047%" y="164" width="0.5669%" height="15" fill="rgb(216,46,13)" fg:x="571874" fg:w="3288"/><text x="98.8547%" y="174.50"></text></g><g><title>dot (scipy\sparse\_base.py:497) (3,219 samples, 0.56%)</title><rect x="98.6166%" y="180" width="0.5550%" height="15" fill="rgb(205,184,25)" fg:x="571943" fg:w="3219"/><text x="98.8666%" y="190.50"></text></g><g><title>__matmul__ (scipy\sparse\_base.py:732) (3,135 samples, 0.54%)</title><rect x="98.6311%" y="196" width="0.5405%" height="15" fill="rgb(228,1,10)" fg:x="572027" fg:w="3135"/><text x="98.8811%" y="206.50"></text></g><g><title>f (src\bo_ecg.py:379) (255,610 samples, 44.07%)</title><rect x="55.0993%" y="132" width="44.0733%" height="15" fill="rgb(213,116,27)" fg:x="319557" fg:w="255610"/><text x="55.3493%" y="142.50">f (src\bo_ecg.py:379)</text></g><g><title>run_ECG (src\bo_purkinje_tree.py:432) (4,979 samples, 0.86%)</title><rect x="98.3140%" y="148" width="0.8585%" height="15" fill="rgb(241,95,50)" fg:x="570188" fg:w="4979"/><text x="98.5640%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (src\bo_ecg.py:795) (255,703 samples, 44.09%)</title><rect x="55.0944%" y="116" width="44.0893%" height="15" fill="rgb(238,48,32)" fg:x="319529" fg:w="255703"/><text x="55.3444%" y="126.50">&lt;listcomp&gt; (src\bo_ecg.py:795)</text></g><g><title>bo_loop (src\bo_ecg.py:795) (255,707 samples, 44.09%)</title><rect x="55.0943%" y="100" width="44.0900%" height="15" fill="rgb(235,113,49)" fg:x="319528" fg:w="255707"/><text x="55.3443%" y="110.50">bo_loop (src\bo_ecg.py:795)</text></g><g><title>bo_loop (src\bo_ecg.py:800) (924 samples, 0.16%)</title><rect x="99.1865%" y="100" width="0.1593%" height="15" fill="rgb(205,127,43)" fg:x="575248" fg:w="924"/><text x="99.4365%" y="110.50"></text></g><g><title>bo_loop (src\bo_ecg.py:804) (835 samples, 0.14%)</title><rect x="99.4301%" y="100" width="0.1440%" height="15" fill="rgb(250,162,2)" fg:x="576661" fg:w="835"/><text x="99.6801%" y="110.50"></text></g><g><title>argmin (jax\_src\numpy\lax_numpy.py:8268) (834 samples, 0.14%)</title><rect x="99.4303%" y="116" width="0.1438%" height="15" fill="rgb(220,13,41)" fg:x="576662" fg:w="834"/><text x="99.6803%" y="126.50"></text></g><g><title>reraise_with_filtered_traceback (jax\_src\traceback_util.py:182) (834 samples, 0.14%)</title><rect x="99.4303%" y="132" width="0.1438%" height="15" fill="rgb(249,221,25)" fg:x="576662" fg:w="834"/><text x="99.6803%" y="142.50"></text></g><g><title>cache_miss (jax\_src\pjit.py:292) (834 samples, 0.14%)</title><rect x="99.4303%" y="148" width="0.1438%" height="15" fill="rgb(215,208,19)" fg:x="576662" fg:w="834"/><text x="99.6803%" y="158.50"></text></g><g><title>_python_pjit_helper (jax\_src\pjit.py:153) (822 samples, 0.14%)</title><rect x="99.4324%" y="164" width="0.1417%" height="15" fill="rgb(236,175,2)" fg:x="576674" fg:w="822"/><text x="99.6824%" y="174.50"></text></g><g><title>&lt;module&gt; (src\ecg_reference_demo.py:554) (578,270 samples, 99.71%)</title><rect x="0.0364%" y="68" width="99.7076%" height="15" fill="rgb(241,52,2)" fg:x="211" fg:w="578270"/><text x="0.2864%" y="78.50">&lt;module&gt; (src\ecg_reference_demo.py:554)</text></g><g><title>main (src\ecg_reference_demo.py:512) (303,814 samples, 52.38%)</title><rect x="47.3592%" y="84" width="52.3848%" height="15" fill="rgb(248,140,14)" fg:x="274667" fg:w="303814"/><text x="47.6092%" y="94.50">main (src\ecg_reference_demo.py:512)</text></g><g><title>clear_backends (jax\_src\api.py:3181) (1,281 samples, 0.22%)</title><rect x="99.7743%" y="84" width="0.2209%" height="15" fill="rgb(253,22,42)" fg:x="578657" fg:w="1281"/><text x="100.0243%" y="94.50"></text></g><g><title>clean_up (jax\_src\api.py:3188) (1,421 samples, 0.25%)</title><rect x="99.7503%" y="68" width="0.2450%" height="15" fill="rgb(234,61,47)" fg:x="578518" fg:w="1421"/><text x="100.0003%" y="78.50"></text></g><g><title>all (579,966 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(208,226,15)" fg:x="0" fg:w="579966"/><text x="0.2500%" y="62.50"></text></g></svg></svg>